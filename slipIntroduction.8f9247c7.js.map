{"version":3,"sources":["src/modules/util.mjs","src/modules/engine.mjs","src/modules/controller.mjs","src/modules/slip.mjs","src/slip-lib.js","example/slipIntroduction.js"],"names":["myQueryAll","root","selector","avoid","id","Math","random","toString","substr","allElem","Array","from","querySelectorAll","separatedSelector","split","map","selec","join","other","filter","value","includes","cloneNoSubslip","elem","newElem","cloneNode","childNodes","forEach","child","classList","contains","placeholder","document","createElement","tagName","add","appendChild","replaceSubslips","clone","subslips","placeholders","subslip","index","replaceWith","window","rootElem","container","innerHTML","querySelector","slipElem","setTimeout","scaleContainer","fChild","slipContainer","firstChild","style","width","height","addEventListener","ev","console","log","layerX","layerY","body","cursor","timeOutIds","clearTimeout","push","openWindow","browserHeight","openWindowWidth","browserWidth","openWindowHeight","winX","winY","currentScale","currentRotate","universe","slips","counterToString","num","depth","result","roman","decimal","i","length","getOpenWindowHeight","getOpenWindowWidth","getCoord","x","y","scale","moveWindow","rotate","delay","transitionDuration","left","top","transform","moveWindowRelative","dx","dy","dscale","drotate","placeSlip","slip","parseFloat","getAttribute","slipScaleContainer","isNaN","max","offsetWidth","offsetHeight","placeSlips","rootDepth","reduce","a","b","placeOpenWindow","innerHeight","innerWidth","floor","right","bottom","transformOrigin","parseInt","zIndex","countersToString","counterList","res","updateCounter","counters","stack","getActionIndex","next","showToC","currentSlide","n","getCurrentSlip","Slip","gotoSlip","pop","newCurrentSlide","getMaxNext","nextSlip","previous","currentSlip","previousSlip","getCoordinateInUniverse","getCoordInParen","globalScale","parseScale","c","getCoordIter","cInParent","offsetLeft","offsetTop","offsetParent","centerX","centerY","cParent","getComputedStyle","ret","moveToElement","element","options","coord","findSlipCoordinate","currentX","currentY","rootSlip","getSlipTree","name","getActionList","e","function","goToState","state","refreshAll","iter","toc","tree","displayTree","stackWithNumbers","containerElement","nameElement","innerText","fullName","ulElement","subtree","newStackWithNumbers","liElement","toCounter","concat","target","setTocElem","setRootSlip","getRootSlip","start","restart","ng","engine","getEngine","setEngine","speedMove","key","refresh","canvas","display","shiftKey","actionL","generateActionList","newActionList","queryAll","addSubSlips","setNthAction","actionList","setAction","pauseSlipList","action","getSubSlipList","actionIndex","setActionIndex","actionI","maxNext","maxTemp","attr","strMax","abs","sumArray","hasAttribute","quer","query","findSubslipByID","goodSubslip","find","updatePauseAncestors","remove","pause","parentElement","incrPause","setAttribute","d","removeAttribute","moveDownTo","moveUpTo","moveCenterTo","doAttributes","str","opacity","visibAt","staticAt","position","visibility","Function","incrIndex","updateToC","savedActionIndex","toReturn","doRefresh","tocElem","ToCList","firstVisit","init","subSlipList","clonedElement","offset","reveal","revealAll","hide","hideAll","MathJax","startup","promise","then","getCloned","setCloned","generatePauseFlowSlipList","slipList","bla","step","Engine","IEngine","Controller","IController","ISlip","Util","IUtil","intro","base","beamerPart","future","but","alert","red","blue","savedX","savedY","controller"],"mappings":"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","file":"slipIntroduction.8f9247c7.js","sourceRoot":"..","sourcesContent":["export let myQueryAll = (root, selector, avoid) => {\n    avoid = avoid || \".slip\";\n    if (!root.id)\n\troot.id = '_' + Math.random().toString(36).substr(2, 15);;\n    let allElem = Array.from(root.querySelectorAll(selector));\n    let separatedSelector = selector.split(\",\").map(selec => \"#\"+root.id+\" \" + avoid + \" \" + selec).join();\n    // console.log(\"debug myQueryAll\", selector, \"VS\",  separatedSelector);\n    let other = Array.from(root.querySelectorAll(separatedSelector));\n    // let other = Array.from(root.querySelectorAll(\"#\"+root.id+\" \" + avoid + \" \" + separatedSelector));\n    return allElem.filter(value => !other.includes(value));\n};\nwindow.myQueryAll = myQueryAll;\n\nexport function cloneNoSubslip (elem) {\n    let newElem = elem.cloneNode(false);\n    elem.childNodes.forEach((child) => {\n\tif(child.classList && child.classList.contains(\"slip\")){\n\t    let placeholder = document.createElement(child.tagName);\n\t    placeholder.classList.add(\"toReplace\");\n\t    newElem.appendChild(placeholder);\n\t}\n\telse\n\t    newElem.appendChild(cloneNoSubslip(child));\n    });\n    return newElem;\n}\nexport function replaceSubslips(clone, subslips) {\n    let placeholders = myQueryAll(clone, \".toReplace\");\n    subslips.forEach((subslip, index) => {\n\tplaceholders[index].replaceWith(subslip);\n    });\n}\n","import { myQueryAll } from './util'\n\nexport default function (root) {\n    function prepareRoot (rootElem) {\n\tlet container = document.createElement(\"div\");\n\tcontainer.innerHTML = \n\t    '\t<div id=\"open-window\">\\\n\t    <div class=\"format-container\">\\\n\t    <div class=\"rotate-container\">\\\n\t\t<div class=\"scale-container\">\\\n\t\t    <div class=\"universe movable\" id=\"universe\">\\\n\t\t\t<div width=\"10000\" height=\"10000\" class=\"fog\"></div>\\\n                        <div class=\"placeHolder\"></div>\\\n\t\t    </div>\\\n\t\t</div>\\\n\t\t</div>\\\n\t    </div>\\\n\t</div>\\\n\t<div class=\"cpt-slip\">0</div>\\\n\t<div class=\"toc-slip\" style=\"display:none;\"></div>';\n\trootElem.replaceWith(container);\n\tcontainer.querySelector(\".placeHolder\").replaceWith(rootElem);\n\trootElem.querySelectorAll(\".slip\").forEach((slipElem) => {\n\t    setTimeout(() => {\n\t\tvar scaleContainer = document.createElement('div');\n\t\tvar slipContainer = document.createElement('div');\n\t\tscaleContainer.classList.add(\"slip-scale-container\");\n\t\tslipContainer.classList.add(\"slip-container\");\n\t\tlet fChild;\n\t\twhile((fChild = slipElem.firstChild)) {\n\t\t    slipContainer.appendChild(fChild);\n\t\t}\n\t\tscaleContainer.appendChild(slipContainer);\n\t\tslipElem.appendChild(scaleContainer);\n\t    },0);\n\t});\n\trootElem.style.width = \"unset\";\n\trootElem.style.height = \"unset\";\n\tdocument.querySelectorAll(\".background-canvas\").forEach((elem)=> {elem.addEventListener(\"click\", (ev) => { console.log(\"vous avez cliquez aux coordonnées : \", ev.layerX, ev.layerY); });});\t\n    }\n    prepareRoot(root);\n\n    // Constants\n    document.body.style.cursor = \"auto\";\n    let timeOutIds = [];\n    document.body.addEventListener(\"mousemove\", (ev) => {\n\ttimeOutIds.forEach((id) => { clearTimeout(id); });\n\tdocument.body.style.cursor = \"auto\";\n\ttimeOutIds.push(setTimeout(() => { document.body.style.cursor = \"none\";}, 5000));\n    });\n    let openWindow = document.querySelector(\"#open-window\");\n    let universe = document.querySelector(\"#universe\");\n    let slips = universe.querySelectorAll(\".slip:not(.root)\");\n    let browserHeight, openWindowWidth;\n    let browserWidth, openWindowHeight;\n    this.getOpenWindowHeight = () => openWindowHeight;\n    this.getOpenWindowWidth = () => openWindowWidth;\n\n    let winX, winY;\n    let currentScale, currentRotate;\n    this.getCoord = () => { return {x: winX, y: winY, scale: currentScale};};\n    this.moveWindow = function (x, y, scale, rotate, delay) {\n\tconsole.log(\"move to\", x, y, \"with scale, rotate, delay\", scale, rotate, delay);\n\tcurrentScale = scale;\n\tcurrentRotate = rotate;\n\twinX = x ;\n\twinY = y;\n\tconsole.log(x,y);\n\tsetTimeout(() => {\n\t    document.querySelector(\".scale-container\").style.transitionDuration = delay+\"s\";\n\t    document.querySelector(\".rotate-container\").style.transitionDuration = delay+\"s\";\n\t    universe.style.transitionDuration = delay+\"s, \"+delay+ \"s\"; \n\t    universe.style.left = -(x*1440 - 1440/2)+\"px\";\n\t    universe.style.top = -(y*1080 - 1080/2)+\"px\";\n\t    document.querySelector(\".scale-container\").style.transform = \"scale(\"+(1/scale)+\")\";\n\t    document.querySelector(\".rotate-container\").style.transform = \"rotate(\"+(rotate)+\"deg)\";\n\t},0);\n    };\n    this.moveWindowRelative = function(dx, dy, dscale, drotate, delay) {\n\tthis.moveWindow(winX+dx, winY+dy, currentScale+dscale, currentRotate+drotate, delay);\n    };\n    this.placeSlip = function(slip) {\n\t// console.log(\"debug Previous (slip)\", slip);\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\t// let x=parseFloat(slip.getAttribute(\"pos-x\")), y=parseFloat(slip.getAttribute(\"pos-y\"));\n\tlet scale = parseFloat(slip.getAttribute(\"scale\"));\n\t// // console.log(slip);\n\tlet slipScaleContainer = slip.querySelector(\".slip-scale-container\");\n\t// let rotate = 0;\n\tscale = isNaN(scale) ? 1 : scale ;\n\t// x = (isNaN(x) ? posX : x);\n\t// y = (isNaN(y) ? posY : y);\n\t// slip.setAttribute(\"pos-x\", x);\n\t// slip.setAttribute(\"pos-y\", y);\n\t// slip.setAttribute(\"scale\", scale);\n\t// slip.setAttribute(\"rotate\", rotate);\n\t// posX = x + 1;\n\t// posY = y;\n\t// slip.style.top = (y*1080 - 1080/2)+\"px\";\n\t// slip.style.left = (x*1440 - 1440/2)+\"px\";\n\t// if(!slip.classList.contains(\"permanent\"))\n\t// \tslip.style.zIndex = \"-1\";\n\t// slip.style.transformOrigin = \"50% 50%\";\n\tslipScaleContainer.style.transform = \"scale(\"+scale+\")\";\n\tslip.style.width = (Math.max(slipScaleContainer.offsetWidth, 1440))*scale+\"px\";\n\tslip.style.height = (Math.max(slipScaleContainer.offsetHeight, 1080))*scale+\"px\";\t\n    };\n    this.placeSlips = function () {\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\tlet depth = function (elem) {\n\t    console.log(\"debug depth (elem)\", elem);\n\t    let subslips = myQueryAll(elem, \".slip\");\n\t    console.log(\"debug depth (subslips)\", elem);\n\t    return 1+subslips.map(depth).reduce((a,b) => Math.max(a,b),0);\n\t};\n\tlet rootDepth = depth(document.body);\n\tconsole.log(\"debug\", rootDepth);\n\tfor(let i= 0; i<rootDepth; i++)\n\t    slips.forEach(this.placeSlip);\t\n    };\n    setTimeout(() => {\n\tthis.placeSlips();\n    },0);\n    this.placeOpenWindow = function () {\n\tbrowserHeight = window.innerHeight;\n\tbrowserWidth = window.innerWidth;\n\tif(browserHeight/3 < browserWidth/4) {\n\t    openWindowWidth = Math.floor((browserHeight*4)/3);\n\t    openWindowHeight = browserHeight;\n\t    openWindow.style.left = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.right = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.width = (openWindowWidth)+\"px\";\n\t    openWindow.style.top = \"0\";\n\t    openWindow.style.bottom = \"0\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t}\n\telse {\n\t    openWindowHeight = Math.floor((browserWidth*3)/4);\n\t    openWindowWidth = browserWidth;\n\t    openWindow.style.top = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.bottom = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t    openWindow.style.right = \"0\";\n\t    openWindow.style.left = \"0\";\n\t    openWindow.style.width = openWindowWidth+\"px\";\n\t}\n\tdocument.querySelector(\".scale-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".rotate-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".format-container\").style.transform = \"scale(\"+(openWindowWidth/1440)+\")\";\n\tdocument.querySelector(\".cpt-slip\").style.right =  (parseInt(openWindow.style.left)) + \"px\";\n\tdocument.querySelector(\".cpt-slip\").style.bottom =  \"0\";\n\tdocument.querySelector(\".cpt-slip\").style.zIndex =  \"10\";\n    };\n    this.placeOpenWindow();\n    window.addEventListener(\"resize\", (ev) => {\n\tthis.placeOpenWindow();\n\tthis.moveWindow(winX, winY, currentScale, currentRotate, 0);\n    });\n\n    // Taken from https://selftaughtjs.com/algorithm-sundays-converting-roman-numerals\n    // Use in showing roman numbers for slip number\n    function counterToString(num, depth) {\n\tif(depth == 1 || depth > 3)\n\t    return num.toString();\n\tlet result = '';\n\tlet decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\tlet roman;\n\tif(depth == 0)\n\t    roman = [\"M\", \"CM\",\"D\",\"CD\",\"C\", \"XC\", \"L\", \"XL\", \"X\",\"IX\",\"V\",\"IV\",\"I\"];\n\telse\n\t    roman = [\"m\", \"cm\",\"d\",\"cd\",\"c\", \"xc\", \"l\", \"xl\", \"x\",\"ix\",\"v\",\"iv\",\"i\"];\n\tfor (var i = 0;i<=decimal.length;i++) {\n\t    while (num%decimal[i] < num) {     \n\t\tresult += roman[i];\n\t\tnum -= decimal[i];\n\t    }\n\t}\n\treturn result;\n    }\n    this.countersToString = (counterList) => {\n\tlet res = '';\n\tres += counterToString(counterList[0]+1, 0);\n\tfor(let i = 1; i < counterList.length; i++)\n\t    res += \".\" + counterToString(counterList[i]+1, i);\n\treturn res;\t\n    };\n    this.updateCounter = function () {\n\tlet counters = stack.map((slip) => slip.getActionIndex());\n\tdocument.querySelector(\".cpt-slip\").innerHTML = this.countersToString(counters);\t\n    };\n    this.next = () => {\n\tif(document.querySelector(\".toc-slip\").innerHTML == \"\")\n\t    this.showToC();\n\t// return true if and only if the stack changed\n\tlet currentSlide = this.getCurrentSlip();\n\tlet n = currentSlide.next();\n\tthis.updateCounter();\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    this.next();\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    this.gotoSlip(newCurrentSlide);\n\t    // newCurrentSlide.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() < newCurrentSlide.getMaxNext())\n\t\tthis.next();\n\t    // this.showToC();\n\t    return true;\n\t    // console.log(stack);\n\t}\n\t// this.showToC();\n\treturn false;\n    };\n    this.nextSlip = function () {\n\t// Do this.next() untill the stack change\n\twhile(!this.next()) {}\n    };\n    this.previous = () => {\n\tlet currentSlip = this.getCurrentSlip();\n\tlet n = currentSlip.previous();\n\tconsole.log(\"debug previous (currentSlip, n)\", currentSlip, n);\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    this.gotoSlip(newCurrentSlide);\n\t    // newCurrentSlide.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() > -1)\n\t\tthis.previous();\n\t    // console.log(stack);\n\t    // this.showToC();\n\t    return true;\n\t}\n\t// this.showToC();\n\treturn false;\n\t// console.log(\"returned\", n);\n    };\n    this.previousSlip = function () {\n\t// Do this.previous() untill the stack change\n\twhile(!this.previous()) {}\n    };\n\n    this.getCoordinateInUniverse = function (elem) {\n\tconsole.log(\"debug getcoord elem\", elem);\n\tlet getCoordInParen = (elem) => {\n\t    return {x: elem.offsetLeft, y:elem.offsetTop};\t    \n\t};\n\tlet globalScale = 1;\n\tlet parseScale = function(transform) {\n\t    if (transform == \"none\")\n\t\treturn 1;\n\t    return parseFloat(transform.split(\"(\")[1].split(\",\")[0]);\n\t};\n\tlet getCoordIter = (elem) => {\n\t    console.log(\"debug getcoorditer elem\", elem);\n\t    let cInParent = getCoordInParen(elem);\n\t    if(!elem.offsetParent)\n\t\treturn { x: 0,\n\t\t\t y: 0,\n\t\t\t centerX: 0,\n\t\t\t centerY: 0,\n\t\t\t width: 0,\n\t\t\t height: 0,\n\t\t\t scale: 0 };\n\t    if(elem.offsetParent.classList.contains(\"universe\"))\n\t    {\n\t\tconsole.log(\"universe\", cInParent);\n\t\treturn cInParent;\n\t    }\n\t    let cParent = getCoordIter(elem.offsetParent);\n\t    let style = window.getComputedStyle(elem.offsetParent);\n\t    // console.log(style);\n\t    let scale;\n\t    // console.log(\"style\", style.transform);\n\t    // if (style.transform == \"none\")\n\t    // \tscale = 1;\n\t    // else\n\t    // \tscale = parseFloat(style.transform.split(\"(\")[1].split(\",\")[0]);\n\t    scale = parseScale(style.transform);\n\t    // console.log(style.transform);\n\t    // console.log(\"scale\", scale);\n\t    // console.log(\"globalScale\", globalScale);\n\t    globalScale *= scale;\n\t    // let scale = 1 ; // Has to parse/compute the scale, for now always 1\n\t    // console.log(\"at step\",  \"cParent.x\", cParent.x, \"cInParen.x\", cInParent.x, \"scale\", scale);\n\t    return {x:cParent.x+cInParent.x*globalScale, y:cParent.y+cInParent.y*globalScale };\n\t};\n\tlet c = getCoordIter(elem);\n\tlet style = window.getComputedStyle(elem);\n\tlet scale = parseScale(style.transform);\n\tglobalScale *= scale;\n\tconsole.log(\"getCoord\", {x:c.x/1440+0.5, y:c.y/1080+0.5}, \"globalScale\", globalScale, style.transform, scale);\n\tlet ret = { x: c.x/1440,\n\t\t    y: c.y/1080,\n\t\t    centerX:c.x/1440+0.5*elem.offsetWidth/1440*globalScale,\n\t\t    centerY:c.y/1080+0.5*elem.offsetHeight/1080*globalScale,\n\t\t    width: elem.offsetWidth/1440*globalScale,\n\t\t    height: elem.offsetHeight/1080*globalScale,\n\t\t    scale: globalScale };\n\tconsole.log(ret);\n\treturn ret;\n\t// return {x:c.x/1440+elem*globalScale*scale, y:c.y/1080+0.5*globalScale*scale, scale: globalScale*scale};\n\t// return {x: this.element.offsetLeft/1440+0.5, y:this.element.offsetTop/1080+0.5};\n    };\n    this.moveToElement = function(element, options) {\n\tlet coord = this.getCoordinateInUniverse(element);\n\tlet actualSize = {width: element.offsetWidth*coord.scale, height: element.offsetHeight*coord.scale};\n\tif(options)\n\t    this.moveWindow(coord.centerX, coord.centerY, Math.max(coord.width, coord.height)// coord.scale\n\t\t\t    , 0, options.delay ? options.delay : 1);\n    };\n    this.gotoSlip = function(slip, options) {\n\tconsole.log(\"we goto slip\");\n\toptions = options ? options : {};\n\tconsole.log(\"options is \", options);\n\tif(slip.element.classList.contains(\"slip\"))\n\t    setTimeout(() => {\n\t\tlet coord = slip.findSlipCoordinate();\n\t\tif(typeof slip.currentX != \"undefined\" && typeof slip.currentY != \"undefined\") {\n\t\t    this.moveWindow(slip.currentX, slip.currentY, coord.scale, slip.rotate, options.delay ? options.delay : slip.delay);\n\t\t} else {\n\t\t    slip.currentX = coord.x; slip.currentY = coord.y;\n\t\t    this.moveWindow(coord.x, coord.y, coord.scale, slip.rotate, options.delay ? options.delay : slip.delay);\n\t\t}\n\t    },0);\n\telse\n\t    setTimeout(() => {\n\t\tconsole.log(\"debug slip element\", slip.element);\n\t\tlet coord = this.getCoordinateInUniverse(slip.element);\n\t\tthis.moveWindow(coord.centerX, coord.centerY, Math.max(coord.width, coord.height), 0, options.delay ? options.delay : slip.delay);\n\t    },0);\n    };\n    let rootSlip = new Slip(root.id, \"Presentation\", [], this, {});\n    let stack = [rootSlip];\n\n    // Stack Management:\n    this.push = function (n) {\n\tstack.push(n);\n\treturn ;\n    };\n    this.pop = function () {\n\tlet n = stack.pop();\n\tif(stack.length == 0)\n\t    stack.push(n);\n\treturn n;\n    };\n    this.getCurrentSlip = function () {\n\treturn stack[stack.length -1];\n    };\n    this.getSlipTree = function (slip) {\n\tslip = slip || rootSlip;\n\tif(slip instanceof Slip) \n\t    return {name: slip.name, slip: slip, subslips: slip.getActionList().map((e) => this.getSlipTree(e))};\n\treturn {function: true};\n    };\n\n    this.goToState = function(state) {\n\tlet iter = (state) => {\n\t    if(state.length == 0)\n\t\treturn;\n\t    iter(state[0]);\n\t    while(state[1].getActionIndex()<state[2])\n\t\tthis.next();\n\t};\n\tstack = [rootSlip];\n\trootSlip.refreshAll();\n\titer(state);\n\tthis.gotoSlip(state[1]);\n    };\n\n    this.showToC = function () {\n\tconsole.log(\"debug showtoc\");\n\tlet toc = document.querySelector(\".toc-slip\");\n\t// let innerHTML = \"\";\n\tlet globalElem = document.createElement(\"div\");\n\tlet tree = this.getSlipTree();\n\t// let before = true;\n\tlet displayTree = (tree, stackWithNumbers) => {\n\t    console.log(\"debug treee\", tree);\n\t    let containerElement = document.createElement(\"div\");\n\t    let nameElement = document.createElement(\"div\");\n\t    // if(before)\n\t    // \tnameElement.style.color = \"blue\";\n\t    // else\n\t    // \tnameElement.style.color = \"yellow\";\n\t    // if(tree.slip == this.getCurrentSlip()) {\n\t    // \tnameElement.style.color = \"red\";\n\t    // \tbefore = false;\n\t    // }\n\t\t\n\t    nameElement.innerText = tree.slip.fullName ? tree.slip.fullName : tree.slip.name ; //+ \" (\" + (tree.slip.getActionIndex()+1) + \"/\" + (tree.slip.getMaxNext()+1) + \")\";\n\t    containerElement.appendChild(nameElement);\n\t    // innerHTML += \"<div>\"+tree.name+\"</div>\";\n\t    if(tree.subslips.length > 0) {\n\t\tlet ulElement = document.createElement(\"ul\");\n\t\t// innerHTML += \"<ul>\";\n\t\ttree.subslips.forEach((subtree, index) => {\n\t\t    let newStackWithNumbers = [stackWithNumbers, tree.slip, index];\n\t\t    let liElement = document.createElement(\"li\");\n\t\t    // innerHTML += \"<li>\";\n\t\t    if(subtree.function) {\n\t\t\tlet toCounter = (c) => {\n\t\t\t    if(c.length == 0)\n\t\t\t\treturn [];\n\t\t\t    return toCounter(c[0]).concat([c[2]]);\n\t\t\t};\n\t\t\tliElement.innerText = this.countersToString(toCounter(newStackWithNumbers));\n\t\t\t//\t\t\tliElement.innerText = \"\"+(index+1);\n\t\t\tliElement.classList.add(\"toc-function\");\n\t\t    } else\n\t\t\tliElement.appendChild(displayTree(subtree, newStackWithNumbers));\n\t\t    liElement.addEventListener(\"click\", (ev) => {\n\t\t    \tif(ev.target == liElement) {\n\t\t    \t    this.goToState(newStackWithNumbers);\n\t\t    \t    console.log(\"newstack\", newStackWithNumbers);\n\t\t    \t}\n\t\t    });\n\t\t    ulElement.appendChild(liElement);\n\t\t    \n\t\t    // innerHTML += \"</li>\";\n\t\t});\n\t\tcontainerElement.appendChild(ulElement);\n\t\ttree.slip.setTocElem(containerElement);\n\t\t// innerHTML += \"</ul>\";\n\t    }\n\t    console.log(\"debug tree, will return\", containerElement);\n\t    // containerElement.addEventListener(\"click\", () => { console.log(stackWithNumbers);});\n\t    return containerElement;\n\t};\n\ttoc.innerHTML = \"\";\n\t// toc.innerHTML = innerHTML;\n\ttoc.appendChild(displayTree(tree, []));\n    };\n    \n    // this.getRootSlip = () => rootSlip;\n    this.setRootSlip = (root) => {\n\trootSlip = root;\n\tstack = [rootSlip];\n    };\n    this.getRootSlip = () => rootSlip;\n    this.start = () => {\n\tstack = [rootSlip];\n\tthis.next();\n    };\n    this.restart = () => {\n\tstack = [rootSlip];\n\trootSlip.refreshAll();\n\tthis.next();\n    };\n};\n","export default function (ng) {\n    let engine = ng;\n    this.getEngine = () => this.engine;\n    this.setEngine = (ng) => this.engine = ng;\n\n    // let mainSlip = mainS;\n    // this.getMainSlip = () => mainSlip;\n    // this.setMainSlip = (slip) => mainSlip = slip;\n\n    let speedMove=1;\n    document.addEventListener(\"keypress\", (ev) => {\n\tif(ev.key == \"f\") { speedMove = (speedMove + 4)%30+1; }    \n\tif(ev.key == \"r\") { engine.getCurrentSlip().refresh(); }    \n\tif(ev.key == \"#\") {\n\t    document.querySelectorAll(\".slip\").forEach((slip) => {slip.style.zIndex = \"-1\";});\n\t    document.querySelectorAll(\".background-canvas\").forEach((canvas) => {canvas.style.zIndex = \"1\";});\n\t}    \n    });\n    document.addEventListener(\"keydown\", (ev) => {\n\tlet openWindowHeight = engine.getOpenWindowHeight();\n\tlet openWindowWidth = engine.getOpenWindowWidth();\n\tif(ev.key == \"l\") { engine.moveWindowRelative( 0                          ,  (speedMove)/openWindowHeight, 0, 0, 0.1); }   // Bas\n\tif(ev.key == \"o\") { engine.moveWindowRelative( 0                          , -(speedMove)/openWindowHeight, 0, 0, 0.1); }  // Haut\n\tif(ev.key == \"k\") { engine.moveWindowRelative(-(speedMove)/openWindowWidth,  0                           , 0, 0, 0.1); }   // Gauche\n\tif(ev.key == \"m\") { engine.moveWindowRelative( (speedMove)/openWindowWidth,  0                           , 0, 0, 0.1); }   // Droite\n\tif(ev.key == \"i\") { engine.moveWindowRelative(0, 0,  0   ,  1, 0.1); }                             // Rotate \n\tif(ev.key == \"p\") { engine.moveWindowRelative(0, 0,  0   , -1, 0.1); }                             // Unrotate\n\tif(ev.key == \"z\") { engine.moveWindowRelative(0, 0,  0.01,  0, 0.1); }                          // Zoom\n\tif(ev.key == \"Z\") { engine.moveWindowRelative(0, 0, -0.01,  0, 0.1); }                          // Unzoom\n\tif(ev.key == \"T\") {\n\t    engine.showToC();\n\t    // document.querySelector(\".toc-slip\").style.display = document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\"; \n\t}   \n\tif(ev.key == \"t\") {\n\t    // engine.showToC();\n\t    document.querySelector(\".toc-slip\").style.display = document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\"; \n\t}   \n\tif(ev.key == \"ArrowRight\") {\n\t    console.log(ev);\n\t    if(ev.shiftKey)\n\t\tengine.nextSlip();\n\t    else    \n\t\tengine.next();\n\t}\n\telse if (ev.key == \"ArrowLeft\") {\n\t    if(ev.shiftKey)\n\t\tengine.previousSlip();\n\t    else    \n\t\tengine.previous();\n\t}\n\telse if (ev.key == \"ArrowUp\") {\n\t    engine.pop();\n\t}\n    });  \n    \n};\n","import { cloneNoSubslip, myQueryAll, replaceSubslips } from './util'\n\nexport default function Slip(name, fullName, actionL, ng, options) {\n\n    // ******************************\n    // Action List\n    // ******************************\n\n    this.generateActionList = function() {\n\tconsole.log(\"debug generateactionlist\", this.name);\n\tlet newActionList = [];\n\tthis.queryAll(\".slip[enter-at]\").forEach((slip) => {\n\t    console.log(\"new slip with \", slip, null, null, ng, {});\n\t    newActionList[slip.getAttribute(\"enter-at\")] = new Slip(slip, \"\", [], ng, {});\n\t});\n\treturn newActionList;\n    };\n    this.addSubSlips = function() {\n\tconsole.log(\"debug generateactionlist\", this.name);\n\tlet newActionList = [];\n\tthis.queryAll(\".slip[enter-at]\").forEach((slip) => {\n\t    console.log(\"new slip with \", slip, null, null, ng, {});\n\t    this.setNthAction(slip.getAttribute(\"enter-at\"), new Slip(slip, \"\", [], ng, {}));\n\t});\n\treturn newActionList;\n    };\n    let actionList = actionL;// || this.generateActionList();\n    this.setAction = (actionL) => {actionList = actionL;};\n    this.getActionList = () => {\n\tlet ret = [];\n\tfor(let i = 0;i <= this.getMaxNext(); i++) {\n\t    if(typeof actionList[i] == \"function\" || actionList[i] instanceof Slip)\n\t\tret[i] = actionList[i];\n\t    else if(this.pauseSlipList[i] instanceof Slip)\n\t\tret[i] = this.pauseSlipList[i];\n\t    else\n\t\tret[i] = () => {};\n\t}\n\treturn ret;\n    };\n    this.setNthAction = (n,action) => {actionList[n] = action;};\n    this.getSubSlipList = function () {\n\treturn actionList.filter((action) => action instanceof Slip);\n    };\n\n    // ******************************\n    // Action Index\n    // ******************************\n    let actionIndex = -1;\n    this.setActionIndex = (actionI) => actionIndex = actionI;\n    this.getActionIndex = () => actionIndex;\n    this.getMaxNext = () => {\n\tif(this.maxNext)\n\t    return this.maxNext;\n\tlet maxTemp = actionList.length;\n\t[\"mk-visible-at\",\n\t \"mk-hidden-at\",\n\t \"mk-emphasize-at\",\n\t \"mk-unemphasize-at\",\n\t \"emphasize-at\",\n\t \"chg-visib-at\",\n\t \"up-at\",\n\t \"down-at\",\n\t \"center-at\",\n\t \"static-at\",\n\t \"exec-at\",\n\t].forEach((attr) => {\n\t     this.queryAll(\"*[\"+attr+\"]\").forEach((elem) => {\n\t\t elem.getAttribute(attr).split(\" \").forEach((strMax) => {\n\t\t     maxTemp = Math.max(Math.abs(parseInt(strMax)),maxTemp);\n\t\t });\n\t     });\n\t});\n\tlet sumArray = this.queryAll(\"[pause], [step], [auto-enter]\").map((elem) => {\n\t    if(elem.hasAttribute(\"pause\") && elem.getAttribute(\"pause\") != \"\")\n\t\treturn parseInt(elem.getAttribute(\"pause\"));\n\t    if(elem.hasAttribute(\"step\") && elem.getAttribute(\"step\") != \"\")\n\t\treturn parseInt(elem.getAttribute(\"step\"));\n\t    return 1; });\n\tmaxTemp = Math.max(maxTemp, sumArray.reduce((a,b) => a+b, 0));\n\tthis.maxNext = maxTemp;\n\treturn maxTemp;\t\n    };\n    \n    // ******************************\n    // Queries\n    // ******************************\n    this.queryAll = (quer) => {\n\treturn myQueryAll(this.element, quer);\n\t// let allElem = Array.from(this.element.querySelectorAll(quer));\n\t// let other = Array.from(this.element.querySelectorAll(\"#\"+this.name+\" .slip \"+quer));\n\t// return allElem.filter(value => !other.includes(value));\n    };\n    this.query = (quer) => {\n\treturn this.queryAll(quer)[0];\n    };\n    this.findSubslipByID = (id) => {\n\tlet goodSubslip = this.getSubSlipList().find((subslip) => {\n\t    if(subslip.name == id)\n\t\treturn 1;\n\t    return subslip.findSubslipByID(id);\n\t});\n\tif(!goodSubslip)\n\t    return false;\n\tif (goodSubslip.name == id) \n\t    return goodSubslip;\n\treturn goodSubslip.findSubslipByID(id);\n    };\n    \n    // ******************************\n    // Coordinates\n    // ******************************\n    this.findSlipCoordinate = () => { // rename to getCoordInUniverse\n\tlet coord = engine.getCoordinateInUniverse(this.element);\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\tcoord.scale *= this.scale;\n\tcoord.y = coord.y + 0.5*coord.scale;\n\tcoord.x = coord.centerX;\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\treturn coord;\n    };\n\n\n    // ******************************\n    // Pause functions\n    // ******************************\n    this.updatePauseAncestors = () => {\n\tthis.queryAll(\".pauseAncestor\").forEach((elem) => {elem.classList.remove(\"pauseAncestor\");});\n\tlet pause = this.query(\"[pause]\");\n\twhile(pause && !pause.classList.contains(\"slip\")) {\n\t    pause.classList.add(\"pauseAncestor\");\n\t    pause = pause.parentElement;\n\t};\n    };\n    this.incrPause = () => {\n\tlet pause = this.query(\"[pause], [auto-enter]:not([auto-enter=\\\"0\\\"]), [step]\");\n\t// let pause = this.query(\"[pause]\");\n\tif(pause) {\n\t    console.log(\"pause is\", this.name, pause);\n\t    if(pause.hasAttribute(\"step\")) {\n\t\tif(!pause.getAttribute(\"step\")) \n\t\t    pause.setAttribute(\"step\", 1);\n\t\tlet d = pause.getAttribute(\"step\");\n\t\tif (d <= 1){\n\t\t    pause.removeAttribute(\"step\");\n\t\t} else\n\t\t    pause.setAttribute(\"step\", d-1);\n\t    }\n\t    if(pause.hasAttribute(\"auto-enter\")) {\n\t\tpause.setAttribute(\"auto-enter\", 0);\n\t    }\n\t    if(pause.hasAttribute(\"pause\")) {\n\t\tif(!pause.getAttribute(\"pause\")) \n\t\t    pause.setAttribute(\"pause\", 1);\n\t\tlet d = pause.getAttribute(\"pause\");\n\t\tif (d <= 1){\n\t\t    pause.removeAttribute(\"pause\");\n\t\t    if(pause.hasAttribute(\"down-at-unpause\")) {\n\t\t\tif(pause.getAttribute(\"down-at-unpause\") == \"\")\n\t\t\t    this.moveDownTo(pause, 1);\n\t\t\telse\n\t\t\t    this.moveDownTo(\"#\"+pause.getAttribute(\"down-at-unpause\"), 1);\t\t\t\n\t\t    }\n\t\t    if(pause.hasAttribute(\"up-at-unpause\")) {\n\t\t\tif(pause.getAttribute(\"up-at-unpause\") == \"\")\n\t\t\t    this.moveUpTo(pause, 1);\n\t\t\telse\n\t\t\t    this.moveUpTo(\"#\"+pause.getAttribute(\"up-at-unpause\"), 1);\n\t\t    }\n\t\t    if(pause.hasAttribute(\"center-at-unpause\"))\n\t\t\tthis.moveCenterTo(pause, 1);\n\t\t} else\n\t\t    pause.setAttribute(\"pause\", d-1);\n\t\tthis.updatePauseAncestors();\n\t    }\n\t}\n    };\n\n    // ******************************\n    // Next functions\n    // ******************************\n    this.doAttributes = () => {\n\tthis.queryAll(\"*[mk-hidden-at]\").forEach((elem) => {\n\t    let hiddenAt = elem.getAttribute(\"mk-hidden-at\").split(\" \").map((str) => parseInt(str));\n\t    if(hiddenAt.includes(actionIndex))\n\t\telem.style.opacity = \"0\";});\t\n\tthis.queryAll(\"*[mk-visible-at]\").forEach((elem) => {\n\t    let visibleAt = elem.getAttribute(\"mk-visible-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibleAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";});\t\n\tthis.queryAll(\"*[mk-emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"mk-emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");});\t\n\tthis.queryAll(\"*[mk-unemphasize-at]\").forEach((elem) => {\n\t    let unemphAt = elem.getAttribute(\"mk-unemphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(unemphAt.includes(actionIndex))\n\t\telem.classList.remove(\"emphasize\");});\t\n\tthis.queryAll(\"*[emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");\n\t    else\n\t\telem.classList.remove(\"emphasize\");\n\t});\t\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    let visibAt = elem.getAttribute(\"chg-visib-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";\n\t    if(visibAt.includes(-actionIndex))\n\t\telem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    let staticAt = elem.getAttribute(\"static-at\").split(\" \").map((str) => parseInt(str));\n\t    if(staticAt.includes(-actionIndex)){\n\t\telem.style.position = \"absolute\";\n\t\telem.style.visibility = \"hidden\";\n\t    }\n\t    if(staticAt.includes(actionIndex)) {\n\t\telem.style.position = \"static\";\n\t\telem.style.visibility = \"visible\";\n\t    }\n\t});\t    \n\tthis.queryAll(\"*[down-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"down-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveDownTo(elem, 1);\n\t});\n\tthis.queryAll(\"*[up-at]\").forEach((elem) => {\n\t    let goTo = elem.getAttribute(\"up-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goTo.includes(actionIndex))\n\t\tthis.moveUpTo(elem, 1);});\n\tthis.queryAll(\"*[center-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"center-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveCenterTo(elem, 1);});\t\n\tthis.queryAll(\"*[exec-at]\").forEach((elem) => {\n\t    let toExec = elem.getAttribute(\"exec-at\").split(\" \").map((str) => parseInt(str));\n\t    if(toExec.includes(actionIndex))\n\t\t(new Function(\"slip\",elem.innerHTML))(this);});\t\n    };\n    this.incrIndex = () => {\n\tconsole.log(\"incrIndex\", this.name);\n\tactionIndex = actionIndex+1;\n\tthis.doAttributes();\n\tif(actionIndex>0)\n\t    this.incrPause();\n\tthis.updateToC();\n    };\n    this.next = function () {\n\tif(actionIndex >= this.getMaxNext())\n\t    return false;\n\tthis.incrIndex();\n\tif(typeof actionList[actionIndex] == \"function\") {\n\t    actionList[actionIndex](this);\n\t}\n\tif(actionList[actionIndex] instanceof Slip){\n\t    return actionList[actionIndex];\n\t}\n\tif(this.pauseSlipList[actionIndex] instanceof Slip)\n\t    return this.pauseSlipList[actionIndex];\n\t// let nextSlip = this.query(\"[pause], [auto-enter]\");\n\t// if(nextSlip.hasAttribute(\"auto-enter\"))\n\t//     return \n\treturn true;\n    };\n    this.previous = () => {\n\tlet savedActionIndex = this.getActionIndex();\n\tthis.doRefresh();\n\tif(savedActionIndex == -1)\n\t    return false;\n \tlet toReturn;\n\twhile(this.getActionIndex()<savedActionIndex-1)\n\t    toReturn = this.next();\n\treturn toReturn;\n    };\n\n    // ******************************\n    // ToC functions\n    // ******************************\n    this.setTocElem = (tocElem) => {this.tocElem = tocElem;};\n    this.updateToC = () => {\n\tif(!this.tocElem)\n\t    return;\n\tif(!this.ToCList)\n\t    this.ToCList = myQueryAll(this.tocElem, \"li\", \"li\");\n\tlet i;\n\tfor(i=0;i<this.getActionIndex(); i++) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"before\");\t    \n\t}\n\tif(i<=this.getActionIndex()) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"current\");\n\t    i++;\n\t}\n\tfor(i;i<=this.getMaxNext(); i++) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"after\");\n\t}\t\n    };\n    this.firstVisit = () => {\n\tthis.updateToC();\n\tif(options.firstVisit)\n\t    options.firstVisit(this);\n    };\n    this.init = () => {\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    elem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    elem.style.position = \"absolute\";\n\t    elem.style.visibility = \"hidden\";\n\t});\t\n\tthis.doAttributes();\n\tthis.updatePauseAncestors();\n\tif(options.init)\n\t    options.init(this);\n    };\n\n    // ******************************\n    // Refreshes\n    // ******************************\n    this.refresh = () => {\n\tif(actionList[actionIndex] instanceof Slip)\n\t    actionList[actionIndex].refresh();\n\telse\n\t    this.doRefresh();\n    };\n    this.refreshAll = () => {\n\tactionList.filter((elem) => elem instanceof Slip).forEach((subslip) => { subslip.refreshAll();});\n\tthis.doRefresh();\n    };\n    this.doRefresh = () => {\n\tthis.setActionIndex(-1);\n\tlet subSlipList = myQueryAll(this.element, \".slip\");;\n\tlet clone = clonedElement.cloneNode(true);\n\treplaceSubslips(clone, subSlipList);\n\tthis.element.replaceWith(clone);\n\tthis.element = clone;\n\tthis.init();\n\tthis.firstVisit();\n\tdelete(this.currentX);\n\tdelete(this.currentY);\n\tengine.gotoSlip(this);\n    };\n\n    // ******************************\n    // Movement and hide/show\n    // ******************************\n    this.moveUpTo = (selector, delay,  offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop)/1080-offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveDownTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight)/1080 - 1 + offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveCenterTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight/2)/1080-1/2+offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.reveal = (selector) => {\n\tthis.query(selector).style.opacity = \"1\";\n    };\n    this.revealAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"1\";});\n    };\n    this.hide = (selector) => {\n\tthis.query(selector).style.opacity = \"0\";\n    };\n    this.hideAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"0\";});\n    };\n\n    // ******************************\n    // Initialisation of the object\n    // ******************************\n    // names    \n    this.fullName = fullName;\n    this.name =\n\ttypeof name == \"string\" ?\n\tname:\n\tname.id;\n    console.log(\"this name is \", this.name);\n    // engine\n    let engine = ng;\n    this.getEngine = () => engine;\n    this.setEngine = (ng) => engine = ng;\n    // element\n    this.element =\n\ttypeof name == \"string\" ?\n\tdocument.querySelector(\"#\"+name):\n\tname;\n    // clonedElement\n    let clonedElement;\n    if(typeof MathJax != \"undefined\")\n\tMathJax.startup.promise.then(() => {\n\t    setTimeout(() => {clonedElement = cloneNoSubslip(this.element);},0);\n\t});\n    this.getCloned = () => clonedElement;\n    this.setCloned = (c) => clonedElement = c;\n    // scale, rotate, delay\n    this.scale = parseFloat(this.element.getAttribute(\"scale\"));\n    if(typeof this.scale == \"undefined\" || isNaN(this.scale)) this.scale = 1;\n    this.rotate = parseFloat(this.element.getAttribute(\"rotate\")) || 0;\n    this.delay = isNaN(parseFloat(this.element.getAttribute(\"delay\"))) ? 0 : (parseFloat(this.element.getAttribute(\"delay\")));\n    // coord\n    let coord = this.findSlipCoordinate();\n    console.log(coord);\n    this.x = coord.x;\n    this.y = coord.y;\n    // Preparing the slip\n    this.init(this, engine);\n    // Adding \"enter-at\" subslips\n    this.addSubSlips();\n    // Adding \"paused-flow\" subslips\n    this.generatePauseFlowSlipList = function () {\n\tlet slipList = [];\n\tlet bla = this.queryAll(\"[pause], [step], [auto-enter]\");\n\tlet step = 1;\n\tbla.forEach((elem) => {\n\t    console.log(\"debug generatePauseFlowsliplist\", elem, step);\n\t    if(elem.hasAttribute(\"auto-enter\")){\n\t\tslipList[step] = new Slip(elem, elem.getAttribute(\"toc-title\") || \"\", [], ng, {});\n\t\tstep++;\n\t    }\n\t    if(elem.hasAttribute(\"step\")){\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t\tstep += parseInt(elem.getAttribute(\"step\")) || 1 ;\n\t\tconsole.log(\"debug generatePauseFlowsliplist2\", elem, step);\n\t    }\n\t    if(elem.hasAttribute(\"pause\")){\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t\tstep += parseInt(elem.getAttribute(\"pause\")) || 1 ;\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t    }\n\t});\n\treturn slipList;\n    };\n    this.pauseSlipList = this.generatePauseFlowSlipList();\n    // this.pauseSlipList = this.queryAll(\"[pause], [step], [auto-enter]\").map((elem) => {\n    // \tif(elem.hasAttribute(\"auto-enter\"))\n    // \t    return new Slip(elem, elem.getAttribute(\"toc-title\") || \"\", [], ng, {});\n    // \treturn null;\n    // });\n}\n","import IEngine from './modules/engine'\nimport IController from './modules/controller.mjs'\nimport ISlip from './modules/slip'\nimport * as IUtil from './modules/util'\n\n/**\n * Allows slip-js to be used as a module\n */\nexport const Engine = IEngine;\nexport const Controller = IController;\nexport const Slip = ISlip;\nexport const Util = IUtil;\n\n/**\n * Allows slip-js to be used as simple CDN-included file\n */\nwindow.Engine = IEngine;\nwindow.Controller = IController;\nwindow.Slip = ISlip;\nwindow.Util = IUtil;","import { Engine, Slip } from '../src/slip-lib'\n\nlet engine = new Engine(document.querySelector(\"#rootSlip\"));\nlet rootSlip = engine.getRootSlip();\n// let rootSlip = new Slip(\"rootSlip\", [], engine, {});\nengine.setRootSlip(rootSlip);\n//rootSlip.setEngine(engine);\n\n// We want a fine control, so we don't let the presentation order the slips by their order of appearance in the HTML file.\n// (this is mostly because we want the slips \"red\" and \"blue\" in the middle of the slip \"future\")\n\n// Creation of slips\nlet intro = new Slip(\"intro\", \"Slip Intro\", [], engine, {});\nlet base = new Slip(\"base\", \"Slip Basics\", [], engine, {});\nlet beamerPart = new Slip(\"beamer-part\", \"Boring part of Slip\", [], engine, {});\n\n// All JS added must be done in the init or the firstVisit function\nlet future = new Slip(\"future\", \"Fun part of Slip\", [], engine, {init: (slip) => { slip.delay = 0;}});\n\nfuture.setNthAction(0, (slip) => {\n    let but = slip.query(\"#mouse\");\n    but.addEventListener(\"mouseenter\", (ev) => {\n\tbut.style.left = (but.style.left == \"0px\" ? \"80%\" : \"0px\");\n    });\n    but.addEventListener(\"click\", (ev) => {\n\talert(\"yo\");\n    });\n    red.element.style.display = \"none\";\n    blue.element.style.display = \"none\";\n});\nfuture.setNthAction(1, (slip) => {\n    slip.delay = 1;\n});\n// When we enter red, we want that when we go back to future we do that \"smoothly\" (in 1s)\nlet red = new Slip(\"red\", \"red Slip\", [], engine, { firstVisit: (slip) => { future.delay = 1;}});\n\nlet blue = new Slip(\"blue\", \"blue Slip\", [], engine, {});\n\n// let scaleTest = new Slip(\"scale-test\", [], presentation, engine, {});\n\n\n// the \"c1\" elements have to be hidden for when \"future\" unzoom. They have to be shown as soon as we enter this slip.\n// let links = new Slip(\"links\", [], engine, {firstVisit: (slip) => {slip.revealAll(\".c1\");}});\n\n// at step 9, future unzooms the window\nfuture.setNthAction(10, (slip) => {\n    slip.savedX = slip.currentX; // saving initial coordinates inside slip\n    slip.savedY = slip.currentY; // so that they are accessible in the next action\n    engine.moveWindow(2,2,4,0,1);\n});\nfuture.setNthAction(11, (slip) => {\n    engine.moveWindow(slip.savedX,slip.savedY,1,0,1); // recovering initial position\n    red.element.style.display = \"inline-block\";\n    blue.element.style.display = \"inline-block\";\n});\n// future.setNthAction(12, red);\n// future.setNthAction(13, blue);\n// (slip) => {\n// \t// presentation.skipSlip({delay:1}); // Leaving \"future\" without finishing it\n// });\n\nrootSlip.setAction([\n    intro,\n    base,\n    beamerPart,\n    future,\n    // scaleTest,\n    // blue,\n    //    future, // coming back to the unfinished \"future\"\n    //    links,\n    // (slip) => {\n    \n    // }\n]);\n// presentation.setSlips([\n//     intro,\n//     base,\n//     beamerPart,\n//     future,\n//     // scaleTest,\n//     blue,\n//     future, // coming back to the unfinished \"future\"\n//     links,\n// ]);\nlet controller = new Controller(engine);\nengine.start();\n"]}