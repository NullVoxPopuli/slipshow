{"version":3,"file":"slipshow.cdn.min.js","sources":["../src/modules/util.mjs","../node_modules/hammerjs/hammer.js","../src/modules/controller.mjs","../src/modules/slip.mjs","../src/slip-lib.js","../src/modules/engine.mjs"],"sourcesContent":["export let myQueryAll = (root, selector, avoid) => {\n    avoid = avoid || \"slip-slip\";\n    if (!root.id)\n\troot.id = '_' + Math.random().toString(36).substr(2, 15);;\n    let allElem = Array.from(root.querySelectorAll(selector));\n    let separatedSelector = selector.split(\",\").map(selec => \"#\"+root.id+\" \" + avoid + \" \" + selec).join();\n    // console.log(\"debug myQueryAll\", selector, \"VS\",  separatedSelector);\n    let other = Array.from(root.querySelectorAll(separatedSelector));\n    // let other = Array.from(root.querySelectorAll(\"#\"+root.id+\" \" + avoid + \" \" + separatedSelector));\n    return allElem.filter(value => !other.includes(value));\n};\nwindow.myQueryAll = myQueryAll;\n\nexport function cloneNoSubslip (elem) {\n    let newElem = elem.cloneNode(false);\n    elem.childNodes.forEach((child) => {\n\tif(child.tagName && child.tagName == \"SLIP-SLIP\"){\n\t    let placeholder = document.createElement(child.tagName);\n\t    placeholder.classList.add(\"toReplace\");\n\t    newElem.appendChild(placeholder);\n\t}\n\telse\n\t    newElem.appendChild(cloneNoSubslip(child));\n    });\n    return newElem;\n}\nexport function replaceSubslips(clone, subslips) {\n    let placeholders = myQueryAll(clone, \".toReplace\");\n    subslips.forEach((subslip, index) => {\n\tplaceholders[index].replaceWith(subslip);\n    });\n}\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","import Hammer from 'hammerjs';\n\nexport default function (ng) {\n    let engine = ng;\n    this.getEngine = () => this.engine;\n    this.setEngine = (ng) => this.engine = ng;\n\n    // let mainSlip = mainS;\n    // this.getMainSlip = () => mainSlip;\n    // this.setMainSlip = (slip) => mainSlip = slip;\n\n    let mc = new Hammer(document.body);\n    mc.on(\"swipe\", (ev) => {\n\tif (ev.direction == 2) {\n\t    engine.next();\n\t}\n\tif (ev.direction == 4) {\n\t    engine.previous();\n\t}\n    });\n    let speedMove=1;\n    document.addEventListener(\"keypress\", (ev) => {\n\tif(ev.key == \"f\") { speedMove = (speedMove + 4)%30+1; }    \n\tif(ev.key == \"r\") { engine.getCurrentSlip().refresh(); }    \n\tif(ev.key == \"#\") {\n\t    document.querySelectorAll(\"slip-slip\").forEach((slip) => {slip.style.zIndex = \"-1\";});\n\t    document.querySelectorAll(\".background-canvas\").forEach((canvas) => {canvas.style.zIndex = \"1\";});\n\t}    \n    });\n    document.addEventListener(\"keydown\", (ev) => {\n\tlet openWindowHeight = engine.getOpenWindowHeight();\n\tlet openWindowWidth = engine.getOpenWindowWidth();\n\tif(ev.key == \"l\") { engine.moveWindowRelative( 0                          ,  (speedMove)/openWindowHeight, 0, 0, 0.1); }   // Bas\n\tif(ev.key == \"o\") { engine.moveWindowRelative( 0                          , -(speedMove)/openWindowHeight, 0, 0, 0.1); }  // Haut\n\tif(ev.key == \"k\") { engine.moveWindowRelative(-(speedMove)/openWindowWidth,  0                           , 0, 0, 0.1); }   // Gauche\n\tif(ev.key == \"m\") { engine.moveWindowRelative( (speedMove)/openWindowWidth,  0                           , 0, 0, 0.1); }   // Droite\n\tif(ev.key == \"i\") { engine.moveWindowRelative(0, 0,  0   ,  1, 0.1); }                             // Rotate \n\tif(ev.key == \"p\") { engine.moveWindowRelative(0, 0,  0   , -1, 0.1); }                             // Unrotate\n\tif(ev.key == \"z\") { engine.moveWindowRelative(0, 0,  0.01,  0, 0.1); }                          // Zoom\n\tif(ev.key == \"Z\") { engine.moveWindowRelative(0, 0, -0.01,  0, 0.1); }                          // Unzoom\n\tif(ev.key == \"T\") {\n\t    engine.showToC();\n\t    // document.querySelector(\".toc-slip\").style.display = document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\"; \n\t}   \n\tif(ev.key == \"t\") {\n\t    // engine.showToC();\n\t    document.querySelector(\".toc-slip\").style.display = document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\"; \n\t}   \n\tif(ev.key == \"ArrowRight\") {\n\t    console.log(ev);\n\t    if(ev.shiftKey)\n\t\tengine.nextSlip();\n\t    else    \n\t\tengine.next();\n\t}\n\telse if (ev.key == \"ArrowLeft\") {\n\t    if(ev.shiftKey)\n\t\tengine.previousSlip();\n\t    else    \n\t\tengine.previous();\n\t}\n\telse if (ev.key == \"ArrowUp\") {\n\t    engine.pop();\n\t}\n    });  \n    \n};\n","import { cloneNoSubslip, myQueryAll, replaceSubslips } from './util'\n\nexport default function Slip(name, fullName, actionL, ng, options) {\n\n    // ******************************\n    // Action List\n    // ******************************\n\n    this.generateActionList = function() {\n\tconsole.log(\"debug generateactionlist\", this.name);\n\tlet newActionList = [];\n\tthis.queryAll(\"slip-slip[enter-at]\").forEach((slip) => {\n\t    console.log(\"new slip with \", slip, null, null, ng, {});\n\t    newActionList[slip.getAttribute(\"enter-at\")] = new Slip(slip, \"\", [], ng, {});\n\t});\n\treturn newActionList;\n    };\n    this.addSubSlips = function() {\n\tconsole.log(\"debug generateactionlist\", this.name);\n\tlet newActionList = [];\n\tthis.queryAll(\"slip-slip[enter-at]\").forEach((slip) => {\n\t    console.log(\"new slip with \", slip, null, null, ng, {});\n\t    this.setNthAction(slip.getAttribute(\"enter-at\"), new Slip(slip, \"\", [], ng, {}));\n\t});\n\treturn newActionList;\n    };\n    let actionList = actionL;// || this.generateActionList();\n    this.setAction = (actionL) => {actionList = actionL;};\n    this.getActionList = () => {\n\tlet ret = [];\n\tfor(let i = 0;i <= this.getMaxNext(); i++) {\n\t    if(this.pauseSlipList[i] instanceof Slip)\n\t\tret[i] = this.pauseSlipList[i];\n\t    else if(typeof actionList[i] == \"function\" || actionList[i] instanceof Slip)\n\t\tret[i] = actionList[i];\n\t    else\n\t\tret[i] = () => {};\n\t}\n\treturn ret;\n    };\n    this.setNthAction = (n,action) => {actionList[n] = action;};\n    this.getCurrentSubSlip = () => {\n\tif(actionList[this.getActionIndex()] instanceof Slip)\n\t    return actionList[this.getActionIndex()];\n\tif(this.pauseSlipList[this.getActionIndex()] instanceof Slip)\n\t    return this.pauseSlipList[this.getActionIndex()];\n\treturn false;\n    };\n    this.nextStageNeedGoto = () => {\n\tif(actionList[this.getActionIndex()+1] instanceof Slip)\n\t    return false;\n\tif(this.pauseSlipList[this.getActionIndex()+1] instanceof Slip)\n\t    return false;\n\tif(this.getActionIndex() >= this.getMaxNext())\n\t    return false;\n\treturn true;\n    };\n    this.getSubSlipList = function () {\n\treturn this.getActionList().filter((action) => action instanceof Slip);\n    };\n\n    // ******************************\n    // Action Index\n    // ******************************\n    let actionIndex = -1;\n    this.setActionIndex = (actionI) => actionIndex = actionI;\n    this.getActionIndex = () => actionIndex;\n    this.getMaxNext = () => {\n\tif(this.maxNext)\n\t    return this.maxNext;\n\tlet maxTemp = actionList.length;\n\t[\"mk-visible-at\",\n\t \"mk-hidden-at\",\n\t \"mk-emphasize-at\",\n\t \"mk-unemphasize-at\",\n\t \"emphasize-at\",\n\t \"chg-visib-at\",\n\t \"up-at\",\n\t \"down-at\",\n\t \"center-at\",\n\t \"static-at\",\n\t \"exec-at\",\n\t \"enter-at\",\n\t \"focus-at\",\n\t \"unfocus-at\",\n\t].forEach((attr) => {\n\t     this.queryAll(\"*[\"+attr+\"]\").forEach((elem) => {\n\t\t elem.getAttribute(attr).split(\" \").forEach((strMax) => {\n\t\t     maxTemp = Math.max(Math.abs(parseInt(strMax)),maxTemp);\n\t\t });\n\t     });\n\t});\n\tlet sumArray = this.queryAll(\"[pause], [step], [auto-enter], [immediate-enter]\").map((elem) => {\n\t    if(elem.hasAttribute(\"pause\") && elem.getAttribute(\"pause\") != \"\")\n\t\treturn parseInt(elem.getAttribute(\"pause\"));\n\t    if(elem.hasAttribute(\"step\") && elem.getAttribute(\"step\") != \"\")\n\t\treturn parseInt(elem.getAttribute(\"step\"));\n\t    return 1; });\n\tmaxTemp = Math.max(maxTemp, sumArray.reduce((a,b) => a+b, 0));\n\tthis.maxNext = maxTemp;\n\treturn maxTemp;\t\n    };\n    \n    // ******************************\n    // Queries\n    // ******************************\n    this.queryAll = (quer) => {\n\treturn myQueryAll(this.element, quer);\n\t// let allElem = Array.from(this.element.querySelectorAll(quer));\n\t// let other = Array.from(this.element.querySelectorAll(\"#\"+this.name+\" slip \"+quer));\n\t// return allElem.filter(value => !other.includes(value));\n    };\n    this.query = (quer) => {\n\tif(typeof quer != \"string\") return quer;\n\treturn this.queryAll(quer)[0];\n    };\n    this.findSubslipByID = (id) => {\n\tlet goodSubslip = this.getSubSlipList().find((subslip) => {\n\t    if(subslip.name == id)\n\t\treturn 1;\n\t    return subslip.findSubslipByID(id);\n\t});\n\tif(!goodSubslip)\n\t    return false;\n\tif (goodSubslip.name == id) \n\t    return goodSubslip;\n\treturn goodSubslip.findSubslipByID(id);\n    };\n    \n    // ******************************\n    // Coordinates\n    // ******************************\n    this.findSlipCoordinate = () => { // rename to getCoordInUniverse\n\tlet coord = engine.getCoordinateInUniverse(this.element);\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\tcoord.scale *= this.scale;\n\tcoord.y = coord.y + 0.5*coord.scale;\n\tcoord.x = coord.centerX;\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\treturn coord;\n    };\n\n\n    // ******************************\n    // Pause functions\n    // ******************************\n    this.updatePauseAncestors = () => {\n\tthis.queryAll(\".pauseAncestor\").forEach((elem) => {elem.classList.remove(\"pauseAncestor\");});\n\tlet pause = this.query(\"[pause]\");\n\twhile(pause && pause.tagName != \"SLIP-SLIP\") {\n\t    pause.classList.add(\"pauseAncestor\");\n\t    pause = pause.parentElement;\n\t};\n    };\n    this.unpause = (pause) => {\n\tif(pause.hasAttribute(\"down-at-unpause\")) {\n\t    if(pause.getAttribute(\"down-at-unpause\") == \"\")\n\t\tthis.moveDownTo(pause, 1);\n\t    else\n\t\tthis.moveDownTo(\"#\"+pause.getAttribute(\"down-at-unpause\"), 1);\t\t\t\n\t}\n\tif(pause.hasAttribute(\"up-at-unpause\")) {\n\t    if(pause.getAttribute(\"up-at-unpause\") == \"\")\n\t\tthis.moveUpTo(pause, 1);\n\t    else\n\t\tthis.moveUpTo(\"#\"+pause.getAttribute(\"up-at-unpause\"), 1);\n\t}\n\tif(pause.hasAttribute(\"center-at-unpause\"))\n\t    if(pause.getAttribute(\"center-at-unpause\") == \"\")\n\t\tthis.moveCenterTo(pause, 1);\n\telse\n\t    this.moveCenterTo(\"#\"+pause.getAttribute(\"center-at-unpause\"), 1);\n\tif(pause.hasAttribute(\"exec-at-unpause\"))\n\t    if(pause.getAttribute(\"exec-at-unpause\") == \"\")\n\t\tthis.executeScript(pause);\n\telse\n\t    this.executeScript(\"#\"+pause.getAttribute(\"exec-at-unpause\"));\t\n\tif(pause.hasAttribute(\"reveal-at-unpause\"))\n\t    if(pause.getAttribute(\"reveal-at-unpause\") == \"\")\n\t\tthis.reveal(pause);\n\telse\n\t    this.reveal(\"#\"+pause.getAttribute(\"reveal-at-unpause\"));\n\tif(pause.hasAttribute(\"focus-at-unpause\"))\n\t    if(pause.getAttribute(\"focus-at-unpause\") == \"\")\n\t\tthis.focus(pause);\n\telse\n\t    this.focus(\"#\"+pause.getAttribute(\"focus-at-unpause\"));\n\tif(pause.hasAttribute(\"unfocus-at-unpause\"))\n\t    if(pause.getAttribute(\"unfocus-at-unpause\") == \"\")\n\t\tthis.unfocus(pause);\n\telse\n\t    this.unfocus(\"#\"+pause.getAttribute(\"unfocus-at-unpause\"));\n    };\n    this.incrPause = () => {\n\tlet pause = this.query(\"[pause], [auto-enter]:not([auto-enter=\\\"0\\\"]), [immediate-enter]:not([immediate-enter=\\\"0\\\"]), [step]\");\n\t// let pause = this.query(\"[pause]\");\n\tif(pause) {\n\t    console.log(\"pause is\", this.name, pause);\n\t    if(pause.hasAttribute(\"step\")) {\n\t\tif(!pause.getAttribute(\"step\")) \n\t\t    pause.setAttribute(\"step\", 1);\n\t\tlet d = pause.getAttribute(\"step\");\n\t\tif (d <= 1){\n\t\t    pause.removeAttribute(\"step\");\n\t\t    this.unpause(pause);\n\t\t} else\n\t\t    pause.setAttribute(\"step\", d-1);\n\t    }\n\t    if(pause.hasAttribute(\"auto-enter\")) {\n\t\tpause.setAttribute(\"auto-enter\", 0);\n\t\tthis.unpause(pause);\n\t    }\n\t    if(pause.hasAttribute(\"immediate-enter\")) {\n\t\tpause.setAttribute(\"immediate-enter\", 0);\n\t\tthis.unpause(pause);\n\t    }\n\t    if(pause.hasAttribute(\"pause\")) {\n\t\tif(!pause.getAttribute(\"pause\")) \n\t\t    pause.setAttribute(\"pause\", 1);\n\t\tlet d = pause.getAttribute(\"pause\");\n\t\tif (d <= 1){\n\t\t    pause.removeAttribute(\"pause\");\n\t\t    this.unpause(pause);\n\t\t} else\n\t\t    pause.setAttribute(\"pause\", d-1);\n\t\tthis.updatePauseAncestors();\n\t    }\n\t}\n    };\n\n    // ******************************\n    // Next functions\n    // ******************************\n    this.doAttributes = () => {\n\tthis.queryAll(\"*[mk-hidden-at]\").forEach((elem) => {\n\t    let hiddenAt = elem.getAttribute(\"mk-hidden-at\").split(\" \").map((str) => parseInt(str));\n\t    if(hiddenAt.includes(actionIndex))\n\t\telem.style.opacity = \"0\";});\t\n\tthis.queryAll(\"*[mk-visible-at]\").forEach((elem) => {\n\t    let visibleAt = elem.getAttribute(\"mk-visible-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibleAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";});\t\n\tthis.queryAll(\"*[mk-emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"mk-emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");});\t\n\tthis.queryAll(\"*[mk-unemphasize-at]\").forEach((elem) => {\n\t    let unemphAt = elem.getAttribute(\"mk-unemphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(unemphAt.includes(actionIndex))\n\t\telem.classList.remove(\"emphasize\");});\t\n\tthis.queryAll(\"*[emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");\n\t    else\n\t\telem.classList.remove(\"emphasize\");\n\t});\t\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    let visibAt = elem.getAttribute(\"chg-visib-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";\n\t    if(visibAt.includes(-actionIndex))\n\t\telem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    let staticAt = elem.getAttribute(\"static-at\").split(\" \").map((str) => parseInt(str));\n\t    if(actionIndex < 0) return;\n\t    if(staticAt.includes(-actionIndex)){\n\t\tconsole.log(\"make unstatic actionIndex elem\", actionIndex, elem);\n\t\tthis.makeUnStatic(elem);\n\t\t// elem.style.position = \"absolute\";\n\t\t// elem.style.visibility = \"hidden\";\n\t    }\n\t    else if(staticAt.includes(actionIndex)) {\n\t\tthis.makeStatic(elem);\n\t\t// elem.style.position = \"static\";\n\t\t// elem.style.visibility = \"visible\";\n\t    }\n\t});\t    \n\tthis.queryAll(\"*[down-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"down-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveDownTo(elem, 1);\n\t});\n\tthis.queryAll(\"*[up-at]\").forEach((elem) => {\n\t    let goTo = elem.getAttribute(\"up-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goTo.includes(actionIndex))\n\t\tthis.moveUpTo(elem, 1);});\n\tthis.queryAll(\"*[center-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"center-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveCenterTo(elem, 1);});\t\n\tthis.queryAll(\"*[focus-at]\").forEach((elem) => {\n\t    let focus = elem.getAttribute(\"focus-at\").split(\" \").map((str) => parseInt(str));\n\t    if(focus.includes(actionIndex))\n\t\tthis.focus(elem, 1);});\t\n\tthis.queryAll(\"*[unfocus-at]\").forEach((elem) => {\n\t    let focus = elem.getAttribute(\"unfocus-at\").split(\" \").map((str) => parseInt(str));\n\t    if(focus.includes(actionIndex))\n\t\tthis.unfocus(elem, 1);});\t\n\tthis.queryAll(\"*[exec-at]\").forEach((elem) => {\n\t    let toExec = elem.getAttribute(\"exec-at\").split(\" \").map((str) => parseInt(str));\n\t    if(toExec.includes(actionIndex))\n\t\tthis.executeScript(elem);});\t\n    };\n    this.incrIndex = () => {\n\tconsole.log(\"incrIndex\", this.name);\n\tactionIndex = actionIndex+1;\n\tthis.doAttributes();\n\tif(actionIndex>0)\n\t    this.incrPause();\n\tthis.updateToC();\n    };\n    this.next = function () {\n\tif(actionIndex >= this.getMaxNext())\n\t    return false;\n\tthis.incrIndex();\n\tif(typeof actionList[actionIndex] == \"function\") {\n\t    actionList[actionIndex](this);\n\t}\n\tif(actionList[actionIndex] instanceof Slip){\n\t    return actionList[actionIndex];\n\t}\n\tif(this.pauseSlipList[actionIndex] instanceof Slip)\n\t    return this.pauseSlipList[actionIndex];\n\t// let nextSlip = this.query(\"[pause], [auto-enter]\");\n\t// if(nextSlip.hasAttribute(\"auto-enter\"))\n\t//     return \n\treturn true;\n    };\n    this.previous = () => {\n\tlet savedActionIndex = this.getActionIndex();\n\tlet savedDelay = this.currentDelay;\n\tthis.getEngine().setDoNotMove(true);\n\tconsole.log(\"gotoslip: we call doRefresh\",this.doRefresh());\n\tif(savedActionIndex == -1)\n\t    return false;\n \tlet toReturn;\n\twhile(this.getActionIndex()<savedActionIndex-1){\n\t    console.log(\"previous is ca we do next\", this.getEngine().getDoNotMove());\n\t    toReturn = this.next();\n\t}\n\t// if(!this.nextStageNeedGoto())\n\t//     this.getEngine().setDoNotMove(false);\n\t// while(this.getActionIndex()<savedActionIndex-1)\n\t//     toReturn = this.next();\n\tsetTimeout(() => {this.getEngine().setDoNotMove(false);},0);\n\tthis.getEngine().gotoSlip(this, {delay:savedDelay});\n\treturn toReturn;\n\n\t// return this.next;\n    };\n\n    // ******************************\n    // ToC functions\n    // ******************************\n    this.setTocElem = (tocElem) => {this.tocElem = tocElem;};\n    this.updateToC = () => {\n\tif(!this.tocElem)\n\t    return;\n\tif(!this.ToCList)\n\t    this.ToCList = myQueryAll(this.tocElem, \"li\", \"li\");\n\tlet i;\n\tfor(i=0;i<this.getActionIndex(); i++) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"before\");\t    \n\t}\n\tif(i<=this.getActionIndex()) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"current\");\n\t    i++;\n\t}\n\tfor(i;i<=this.getMaxNext(); i++) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"after\");\n\t}\t\n    };\n    this.firstVisit = () => {\n\tthis.updateToC();\n\tif(options.firstVisit)\n\t    options.firstVisit(this);\n    };\n    this.init = () => {\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    elem.style.opacity = \"0\";\n\t});\t\n\t// this.queryAll(\"*[static-at]\").forEach((elem) => {\n\t//     elem.style.position = \"absolute\";\n\t//     elem.style.visibility = \"hidden\";\n\t// });\t\n//\tthis.doAttributes();\n\tthis.updatePauseAncestors();\n\tif(options.init)\n\t    options.init(this);\n    };\n\n    // ******************************\n    // Refreshes\n    // ******************************\n    this.refresh = () => {\n\tif(actionList[actionIndex] instanceof Slip)\n\t    actionList[actionIndex].refresh();\n\telse\n\t    this.doRefresh();\n    };\n    this.refreshAll = () => {\n\tactionList.filter((elem) => elem instanceof Slip).forEach((subslip) => { subslip.refreshAll();});\n\tthis.pauseSlipList.filter((elem) => elem instanceof Slip).forEach((subslip) => { subslip.refreshAll();});\n\tthis.doRefresh();\n    };\n    this.doRefresh = () => {\n\tconsole.log(\"gotoslip: doRefresh has been called\");\n\tthis.setActionIndex(-1);\n\tlet subSlipList = myQueryAll(this.element, \"slip-slip\");\n\tconsole.log(\"mmdebug\", clonedElement);\n\tlet clone = clonedElement.cloneNode(true);\n\treplaceSubslips(clone, subSlipList);\n\tthis.element.replaceWith(clone);\n\tthis.element = clone;\n\tthis.init();\n\tthis.firstVisit();\n\tdelete(this.currentX);\n\tdelete(this.currentY);\n\tdelete(this.currentDelay);\n\tconsole.log(\"previous is ca GOTOSLIP FROM 3\", options, this.getEngine().getDoNotMove());\n\tthis.getEngine().gotoSlip(this);\n    };\n\n    // ******************************\n    // Movement, execution and hide/show\n    // ******************************\n    this.makeUnStatic = (selector, delay, opacity) => {\n\tlet elem = this.query(selector);\n\t// setTimeout(() => {\n\t//     elem.style.overflow = \"hidden\"; \n\t//     setTimeout(() => {\n\t// \telem.style.transition = \"height \"+ (typeof(delay) == \"undefined\" ? \"1s\" : (delay+\"s\"));\n\t// \tif(opacity)\n\t// \t    elem.style.transition += \", opacity \"+ (typeof(delay) == \"undefined\" ? \"1s\" : (delay+\"s\"));\n\t// \telem.style.height = (elem.offsetHeight+\"px\");\n\t// \tif(opacity)\n\t// \t    elem.style.opacity = \"1\";\n\t// \tsetTimeout(() => {\n\t// \t    if(opacity)\n\t// \t    \telem.style.opacity = \"0\"; \n\t// \t    elem.style.height = (\"0px\");}, 10);\n\t//     }, 0);\n\t// },0);\n\telem.style.position = \"absolute\";\n\telem.style.visibility = \"hidden\";\n    };\n    this.makeStatic = (selector) => {\n\tlet elem = this.query(selector);\n\telem.style.position = \"static\";\n\telem.style.visibility = \"visible\";\n    };\n    this.unfocus = (selector) => {\n\tthis.getEngine().gotoSlip(this, { delay: 1});\n    };\n    this.focus = (selector) => {\n\tlet elem = this.query(selector);\n\tthis.getEngine().moveToElement(elem, {});\n    };\n\n    this.executeScript = (selector) => {\n\tlet elem;\n\tif(typeof selector == \"string\") elem = this.query(selector);\n\telse elem = selector;\n\t(new Function(\"slip\",elem.innerHTML))(this);\n    };\n    this.moveUpTo = (selector, delay,  offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop)/1080-offset)*coord.scale;\n\t    this.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t    // this.currentX = coord.x;\n\t    // this.currentY = coord.y+d;\n\t    // this.currentDelay = delay;\n\t    // engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveDownTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight)/1080 - 1 + offset)*coord.scale;\n\t    this.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t    // this.currentX = coord.x;\n\t    // this.currentY = coord.y+d;\n\t    // this.currentDelay = delay;\n\t    // engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveCenterTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight/2)/1080-1/2+offset)*coord.scale;\n\t    this.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t    // this.currentX = coord.x;\n\t    // this.currentY = coord.y+d;\n\t    // this.currentDelay = delay;\n\t    // engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.restoreWindow = () => {\n\tthis.getEngine\n    };\n    this.moveWindow = (x,y,scale,rotate, delay) => {\n\tthis.currentX = x;\n\tthis.currentY = y;\n\tthis.currentDelay = delay;\n\tconsole.log(\"previous is ca we try to move win\", this.getEngine().getDoNotMove());\n\tconsole.log(\"previous is ca ORIGIN 3\", x, y, this.getEngine().getDoNotMove());\n//\tsetTimeout(() => {\n\t    this.getEngine().moveWindow(x, y, scale, rotate, delay);\n//\t}, 0);\n    };\n    this.reveal = (selector) => {\n\tlet elem;\n\tif(typeof selector == \"string\") elem = this.query(selector);\n\telse elem = selector;\n\telem.style.opacity = \"1\";\n    };\n    this.revealAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"1\";});\n    };\n    this.hide = (selector) => {\n\tthis.query(selector).style.opacity = \"0\";\n    };\n    this.hideAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"0\";});\n    };\n\n    // ******************************\n    // Initialisation of the object\n    // ******************************\n    // engine\n    let engine = ng;\n    this.getEngine = () => engine;\n    this.setEngine = (ng) => engine = ng;\n    // element\n    this.element =\n\ttypeof name == \"string\" ?\n\tdocument.querySelector(name[0]==\"#\" ? name : (\"#\"+name)):\n\tname;\n    // names\n    this.name =\n\ttypeof name == \"string\" ?\n\tname:\n\tname.id;\n    if(typeof(fullName) == \"string\")\n\tthis.fullName = fullName ;\n    else if (this.element.hasAttribute(\"toc-title\"))\n\tthis.fullName = this.element.getAttribute(\"toc-title\");\n    else\n\tthis.fullName = this.name;\n    console.log(\"this name is \", this.name);\n    // clonedElement\n    let clonedElement;\n    if(typeof MathJax != \"undefined\")\n\tMathJax.startup.promise.then(() => {\n\t    setTimeout(() => {clonedElement = cloneNoSubslip(this.element);},0);\n\t});\n    else\n\tsetTimeout(() => {clonedElement = cloneNoSubslip(this.element);},0);\n    this.getCloned = () => clonedElement;\n    this.setCloned = (c) => clonedElement = c;\n    // scale, rotate, delay\n    this.scale = parseFloat(this.element.getAttribute(\"scale\"));\n    if(typeof this.scale == \"undefined\" || isNaN(this.scale)) this.scale = 1;\n    this.rotate = parseFloat(this.element.getAttribute(\"rotate\")) || 0;\n    this.delay = isNaN(parseFloat(this.element.getAttribute(\"delay\"))) ? 0 : (parseFloat(this.element.getAttribute(\"delay\")));\n    // coord\n    let coord = this.findSlipCoordinate();\n    console.log(coord);\n    this.x = coord.x;\n    this.y = coord.y;\n    // Preparing the slip\n    this.init(this, engine);\n    // Adding \"enter-at\" subslips\n    this.addSubSlips();\n    // Adding \"paused-flow\" subslips\n    this.generatePauseFlowSlipList = function () {\n\tlet slipList = [];\n\tlet bla = this.queryAll(\"[pause], [step], [auto-enter], [immediate-enter]\");\n\tlet step = 1;\n\tbla.forEach((elem) => {\n\t    console.log(\"debug generatePauseFlowsliplist\", elem, step);\n\t    if(elem.hasAttribute(\"auto-enter\")){\n\t\tslipList[step] = new Slip(elem, elem.getAttribute(\"toc-title\") || \"\", [], ng, {});\n\t\tstep++;\n\t    }\n\t    if(elem.hasAttribute(\"immediate-enter\")){\n\t\t// the slip is entered before the pause\n\t\tslipList[step-1] = new Slip(elem, elem.getAttribute(\"toc-title\") || \"\", [], ng, {});\n\t\tstep++;\n\t    }\n\t    if(elem.hasAttribute(\"step\")){\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t\tstep += parseInt(elem.getAttribute(\"step\")) || 1 ;\n\t\tconsole.log(\"debug generatePauseFlowsliplist2\", elem, step);\n\t    }\n\t    if(elem.hasAttribute(\"pause\")){\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t\tstep += parseInt(elem.getAttribute(\"pause\")) || 1 ;\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t    }\n\t});\n\treturn slipList;\n    };\n    this.pauseSlipList = this.generatePauseFlowSlipList();\n    // this.pauseSlipList = this.queryAll(\"[pause], [step], [auto-enter]\").map((elem) => {\n    // \tif(elem.hasAttribute(\"auto-enter\"))\n    // \t    return new Slip(elem, elem.getAttribute(\"toc-title\") || \"\", [], ng, {});\n    // \treturn null;\n    // });\n}\n","import IEngine from './modules/engine'\nimport IController from './modules/controller.mjs'\nimport ISlip from './modules/slip'\nimport * as IUtil from './modules/util'\n\n// import \"./css/slip.css\";\n// import \"./css/theorem.css\";\n\n/**\n * Allows slip-js to be used as a module\n */\nexport const Engine = IEngine;\nexport const Controller = IController;\nexport const Slip = ISlip;\nexport const Util = IUtil;\n\nexport let startSlipshow = () => {\n    let engine;\n    if(typeof MathJax != \"undefined\")\n\tMathJax.startup.promise.then(() => {\n\t    engine = new Engine(document.querySelector(\"slip-slipshow\")).start();\n\t});\n    else\n\tengine = new Engine(document.querySelector(\"slip-slipshow\")).start();\n    return engine;\n};\n\n/**\n * Allows slip-js to be used as simple CDN-included file\n */\n// window.Engine = IEngine;\n// window.Controller = IController;\n// window.Slip = ISlip;\n// window.Util = IUtil;\n","import { myQueryAll } from './util';\nimport Controller from './controller';\nimport Slip from './slip';\n\nexport default function (root) {\n    function prepareRoot (rootElem) {\n\tlet container = document.createElement(\"div\");\n\tcontainer.innerHTML = \n\t    '\t\\\n\t<div class=\"toc-slip\" style=\"display:none;\"></div>\\\n        <div id=\"open-window\">\\\n\t  <div class=\"cpt-slip\">0</div>\\\n\t  <div class=\"format-container\">\\\n\t    <div class=\"rotate-container\">\\\n\t\t<div class=\"scale-container\">\\\n\t\t    <div class=\"universe movable\" id=\"universe\">\\\n\t\t\t<div width=\"10000\" height=\"10000\" class=\"fog\"></div>\\\n                        <div class=\"placeHolder\"></div>\\\n\t\t    </div>\\\n\t\t</div>\\\n              </div>\\\n\t    </div>\\\n\t</div>';\n\trootElem.replaceWith(container);\n\tcontainer.querySelector(\".placeHolder\").replaceWith(rootElem);\n\trootElem.querySelectorAll(\"slip-slip\").forEach((slipElem) => {\n\t    setTimeout(() => {\n\t\tvar scaleContainer = document.createElement('div');\n\t\tvar slipContainer = document.createElement('div');\n\t\tscaleContainer.classList.add(\"slip-scale-container\");\n\t\tslipContainer.classList.add(\"slip-container\");\n\t\tlet fChild;\n\t\twhile((fChild = slipElem.firstChild)) {\n\t\t    slipContainer.appendChild(fChild);\n\t\t}\n\t\tscaleContainer.appendChild(slipContainer);\n\t\tslipElem.appendChild(scaleContainer);\n\t    },0);\n\t});\n\trootElem.style.width = \"unset\";\n\trootElem.style.height = \"unset\";\n\tdocument.querySelectorAll(\".background-canvas\").forEach((elem)=> {elem.addEventListener(\"click\", (ev) => { console.log(\"vous avez cliquez aux coordonnées : \", ev.layerX, ev.layerY); });});\t\n    }\n    if (typeof(root) == \"string\") {\n\tif(root[0] != \"#\")\n\t    root = \"#\"+root;\n\troot = document.querySelector(root);\n    }\n    else if (typeof(root) == \"undefined\")\n\troot = document.querySelector(\"slip-slipshow\");\n    prepareRoot(root);\n\n    // Constants\n    document.body.style.cursor = \"auto\";\n    let timeOutIds = [];\n    document.body.addEventListener(\"mousemove\", (ev) => {\n\ttimeOutIds.forEach((id) => { clearTimeout(id); });\n\tdocument.body.style.cursor = \"auto\";\n\ttimeOutIds.push(setTimeout(() => { document.body.style.cursor = \"none\";}, 5000));\n    });\n    let openWindow = document.querySelector(\"#open-window\");\n    let universe = document.querySelector(\"#universe\");\n    let slips = universe.querySelectorAll(\"slip-slip:not(slip-slipshow)\");\n    let browserHeight, openWindowWidth;\n    let browserWidth, openWindowHeight;\n    this.getOpenWindowHeight = () => openWindowHeight;\n    this.getOpenWindowWidth = () => openWindowWidth;\n\n    let winX, winY;\n    let currentScale, currentRotate;\n    this.getCoord = () => { return {x: winX, y: winY, scale: currentScale};};\n    let doNotMove = false;\n    this.setDoNotMove = m => doNotMove = m;\n    this.getDoNotMove = m => doNotMove;\n    this.moveWindow = function (x, y, scale, rotate, delay) {\n\tif(this.getDoNotMove()) {\n\t    console.log(\"we cannot move\");\n\t    console.log(\"previous is ca we cannot move !\");\n\t    return;\n\t}\n\tconsole.log(\"previous is ca getDoNotMove !\", x,y,scale, rotate, delay, this.getDoNotMove());\n\tconsole.log(\"move to\", x, y, \"with scale, rotate, delay\", scale, rotate, delay);\n\tcurrentScale = scale;\n\tcurrentRotate = rotate;\n\twinX = x ;\n\twinY = y;\n\tconsole.log(x,y);\n\tsetTimeout(() => {\n\t    document.querySelector(\".scale-container\").style.transitionDuration = delay+\"s\";\n\t    document.querySelector(\".rotate-container\").style.transitionDuration = delay+\"s\";\n\t    universe.style.transitionDuration = delay+\"s, \"+delay+ \"s\"; \n\t    setTimeout(() => {\n\t\tuniverse.style.left = -(x*1440 - 1440/2)+\"px\";\n\t\tuniverse.style.top = -(y*1080 - 1080/2)+\"px\";\n\t\tdocument.querySelector(\".scale-container\").style.transform = \"scale(\"+(1/scale)+\")\";\n\t\tdocument.querySelector(\".rotate-container\").style.transform = \"rotate(\"+(rotate)+\"deg)\";\n\t    },0);\n\t},0);\n\treturn;\n    };\n    this.moveWindowRelative = function(dx, dy, dscale, drotate, delay) {\n\tthis.moveWindow(winX+dx, winY+dy, currentScale+dscale, currentRotate+drotate, delay);\n    };\n    this.placeSlip = function(slip) {\n\t// console.log(\"debug Previous (slip)\", slip);\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\t// let x=parseFloat(slip.getAttribute(\"pos-x\")), y=parseFloat(slip.getAttribute(\"pos-y\"));\n\tlet scale = parseFloat(slip.getAttribute(\"scale\"));\n\t// // console.log(slip);\n\tlet slipScaleContainer = slip.querySelector(\".slip-scale-container\");\n\t// let rotate = 0;\n\tscale = isNaN(scale) ? 1 : scale ;\n\t// x = (isNaN(x) ? posX : x);\n\t// y = (isNaN(y) ? posY : y);\n\t// slip.setAttribute(\"pos-x\", x);\n\t// slip.setAttribute(\"pos-y\", y);\n\t// slip.setAttribute(\"scale\", scale);\n\t// slip.setAttribute(\"rotate\", rotate);\n\t// posX = x + 1;\n\t// posY = y;\n\t// slip.style.top = (y*1080 - 1080/2)+\"px\";\n\t// slip.style.left = (x*1440 - 1440/2)+\"px\";\n\t// if(!slip.classList.contains(\"permanent\"))\n\t// \tslip.style.zIndex = \"-1\";\n\t// slip.style.transformOrigin = \"50% 50%\";\n\tslipScaleContainer.style.transform = \"scale(\"+scale+\")\";\n\tslip.style.width = (Math.max(slipScaleContainer.offsetWidth, 1440))*scale+\"px\";\n\tslip.style.height = (Math.max(slipScaleContainer.offsetHeight, 1080))*scale+\"px\";\t\n    };\n    this.placeSlips = function () {\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\tlet depth = function (elem) {\n\t    console.log(\"debug depth (elem)\", elem);\n\t    let subslips = myQueryAll(elem, \"slip-slip\");\n\t    console.log(\"debug depth (subslips)\", elem);\n\t    return 1+subslips.map(depth).reduce((a,b) => Math.max(a,b),0);\n\t};\n\tlet rootDepth = depth(document.body);\n\tconsole.log(\"debug\", rootDepth);\n\tfor(let i= 0; i<rootDepth; i++)\n\t    slips.forEach(this.placeSlip);\t\n    };\n    setTimeout(() => {\n\tthis.placeSlips();\n    },0);\n    this.placeOpenWindow = function () {\n\tbrowserHeight = window.innerHeight;\n\tbrowserWidth = window.innerWidth;\n\tif(browserHeight/3 < browserWidth/4) {\n\t    openWindowWidth = Math.floor((browserHeight*4)/3);\n\t    openWindowHeight = browserHeight;\n\t    openWindow.style.left = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.right = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.width = (openWindowWidth)+\"px\";\n\t    openWindow.style.top = \"0\";\n\t    openWindow.style.bottom = \"0\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t}\n\telse {\n\t    openWindowHeight = Math.floor((browserWidth*3)/4);\n\t    openWindowWidth = browserWidth;\n\t    openWindow.style.top = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.bottom = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t    openWindow.style.right = \"0\";\n\t    openWindow.style.left = \"0\";\n\t    openWindow.style.width = openWindowWidth+\"px\";\n\t}\n\tdocument.querySelector(\".scale-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".rotate-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".format-container\").style.transform = \"scale(\"+(openWindowWidth/1440)+\")\";\n\tdocument.querySelector(\".cpt-slip\").style.right =  (parseInt(openWindow.style.left)) + \"px\";\n\tdocument.querySelector(\".cpt-slip\").style.bottom =  \"0\";\n\tdocument.querySelector(\".cpt-slip\").style.zIndex =  \"10\";\n    };\n    this.placeOpenWindow();\n    window.addEventListener(\"resize\", (ev) => {\n\tthis.placeOpenWindow();\n\tthis.moveWindow(winX, winY, currentScale, currentRotate, 0);\n    });\n\n    // Taken from https://selftaughtjs.com/algorithm-sundays-converting-roman-numerals\n    // Use in showing roman numbers for slip number\n    function counterToString(num, depth) {\n\tif(depth == 1 || depth > 3)\n\t    return num.toString();\n\tlet result = '';\n\tlet decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\tlet roman;\n\tif(depth == 0)\n\t    roman = [\"M\", \"CM\",\"D\",\"CD\",\"C\", \"XC\", \"L\", \"XL\", \"X\",\"IX\",\"V\",\"IV\",\"I\"];\n\telse\n\t    roman = [\"m\", \"cm\",\"d\",\"cd\",\"c\", \"xc\", \"l\", \"xl\", \"x\",\"ix\",\"v\",\"iv\",\"i\"];\n\tfor (var i = 0;i<=decimal.length;i++) {\n\t    while (num%decimal[i] < num) {     \n\t\tresult += roman[i];\n\t\tnum -= decimal[i];\n\t    }\n\t}\n\treturn result;\n    }\n    this.countersToString = (counterList) => {\n\tlet res = '';\n\tres += counterToString(counterList[0]+1, 0);\n\tfor(let i = 1; i < counterList.length; i++)\n\t    res += \".\" + counterToString(counterList[i]+1, i);\n\treturn res;\t\n    };\n    this.updateCounter = function () {\n\tlet counters = stack.map((slip) => slip.getActionIndex());\n\tdocument.querySelector(\".cpt-slip\").innerHTML = this.countersToString(counters);\t\n    };\n    this.next = () => {\n\tif(document.querySelector(\".toc-slip\").innerHTML == \"\")\n\t    this.showToC();\n\t// return true if and only if the stack changed\n\tlet currentSlide = this.getCurrentSlip();\n\tlet n = currentSlide.next();\n\tthis.updateCounter();\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    this.next();\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlip = this.getCurrentSlip();\n\t    if(newCurrentSlip.nextStageNeedGoto())\n\t\tthis.gotoSlip(newCurrentSlip);\n\t    // newCurrentSlip.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlip.getActionIndex() < newCurrentSlip.getMaxNext())\n\t\tthis.next();\n\t    else\n\t\tthis.gotoSlip(newCurrentSlip);\n\t    // this.showToC();\n\t    return true;\n\t    // console.log(stack);\n\t}\n\t// this.showToC();\n\treturn false;\n    };\n    this.nextSlip = function () {\n\t// Do this.next() untill the stack change\n\twhile(!this.next()) {}\n    };\n    this.previous = (options) => {\n\tconsole.log(\"previous is called with option\", options);\n\tlet currentSlip = this.getCurrentSlip();\n\t// setDoNotMove(true);\n\t// let stage = currentSlip.previous2();\n\t// setDoNotMove(false);\n\tlet n = currentSlip.previous();\n\t// if(stage == \"\")\n\tconsole.log(\"debug previous (currentSlip, n)\", currentSlip, n);\n\tif(n instanceof Slip) {\n\t    while(n.getCurrentSubSlip() instanceof Slip) {\n\t\tthis.push(n);\n\t\tn = n.getCurrentSubSlip();\n\t    }\n\t    this.push(n);\n\t    console.log(\"previous is ca GOTOSLIP FROM 1\", options);\n\t    \n\t    this.gotoSlip(n, options);\n\t    // this.gotoSlip(n, {delay: currentSlip.delay});\n\t\t\n\t    // this.showToC();\n\t    this.updateCounter();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    // newCurrentSlide.incrIndex();\n\t    console.log(\"previous is ca currentDelay, delay\", currentSlip.currentDelay , currentSlip.delay);\n\t    \n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() > -1)\n\t\tthis.previous({delay: (currentSlip.currentDelay ? currentSlip.currentDelay : currentSlip.delay )});\n\t    else {\n\t\tthis.gotoSlip(newCurrentSlide, options);\n\t\tconsole.log(\"previous is ca GOTOSLIP FROM 2\", options);\n\t    }\n\t\t// this.gotoSlip(newCurrentSlide, {delay: currentSlip.delay});\n\t    // console.log(stack);\n\t    // this.showToC();\n\t    this.updateCounter();\n\t    return true;\n\t} else if(options){\n\t    setTimeout(() => {\n\t\tthis.gotoSlip(currentSlip, options);\n\t    },0);\n\t}\n\t// this.showToC();\n\tthis.updateCounter();\n\treturn false;\n\t// console.log(\"returned\", n);\n    };\n    this.previousSlip = function () {\n\t// Do this.previous() untill the stack change\n\twhile(!this.previous()) {}\n    };\n\n    this.getCoordinateInUniverse = function (elem) {\n\tconsole.log(\"debug getcoord elem\", elem);\n\tlet getCoordInParen = (elem) => {\n\t    return {x: elem.offsetLeft, y:elem.offsetTop};\t    \n\t};\n\tlet globalScale = 1;\n\tlet parseScale = function(transform) {\n\t    if (transform == \"none\")\n\t\treturn 1;\n\t    return parseFloat(transform.split(\"(\")[1].split(\",\")[0]);\n\t};\n\tlet getCoordIter = (elem) => {\n\t    console.log(\"debug getcoorditer elem\", elem);\n\t    let cInParent = getCoordInParen(elem);\n\t    if(!elem.offsetParent)\n\t\treturn { x: 0,\n\t\t\t y: 0,\n\t\t\t centerX: 0,\n\t\t\t centerY: 0,\n\t\t\t width: 0,\n\t\t\t height: 0,\n\t\t\t scale: 0 };\n\t    if(elem.offsetParent.classList.contains(\"universe\"))\n\t    {\n\t\tconsole.log(\"universe\", cInParent);\n\t\treturn cInParent;\n\t    }\n\t    let cParent = getCoordIter(elem.offsetParent);\n\t    let style = window.getComputedStyle(elem.offsetParent);\n\t    // console.log(style);\n\t    let scale;\n\t    // console.log(\"style\", style.transform);\n\t    // if (style.transform == \"none\")\n\t    // \tscale = 1;\n\t    // else\n\t    // \tscale = parseFloat(style.transform.split(\"(\")[1].split(\",\")[0]);\n\t    scale = parseScale(style.transform);\n\t    // console.log(style.transform);\n\t    // console.log(\"scale\", scale);\n\t    // console.log(\"globalScale\", globalScale);\n\t    globalScale *= scale;\n\t    // let scale = 1 ; // Has to parse/compute the scale, for now always 1\n\t    // console.log(\"at step\",  \"cParent.x\", cParent.x, \"cInParen.x\", cInParent.x, \"scale\", scale);\n\t    return {x:cParent.x+cInParent.x*globalScale, y:cParent.y+cInParent.y*globalScale };\n\t};\n\tlet c = getCoordIter(elem);\n\tlet style = window.getComputedStyle(elem);\n\tlet scale = parseScale(style.transform);\n\tglobalScale *= scale;\n\tconsole.log(\"getCoord\", {x:c.x/1440+0.5, y:c.y/1080+0.5}, \"globalScale\", globalScale, style.transform, scale);\n\tlet ret = { x: c.x/1440,\n\t\t    y: c.y/1080,\n\t\t    centerX:c.x/1440+0.5*elem.offsetWidth/1440*globalScale,\n\t\t    centerY:c.y/1080+0.5*elem.offsetHeight/1080*globalScale,\n\t\t    width: elem.offsetWidth/1440*globalScale,\n\t\t    height: elem.offsetHeight/1080*globalScale,\n\t\t    scale: globalScale };\n\tconsole.log(ret);\n\treturn ret;\n\t// return {x:c.x/1440+elem*globalScale*scale, y:c.y/1080+0.5*globalScale*scale, scale: globalScale*scale};\n\t// return {x: this.element.offsetLeft/1440+0.5, y:this.element.offsetTop/1080+0.5};\n    };\n    this.moveToElement = function(element, options) {\n\tlet coord = this.getCoordinateInUniverse(element);\n\tlet actualSize = {width: element.offsetWidth*coord.scale, height: element.offsetHeight*coord.scale};\n\tif(options)\n\t    this.moveWindow(coord.centerX, coord.centerY, Math.max(coord.width, coord.height)// coord.scale\n\t\t\t    , 0, options.delay ? options.delay : 1);\n    };\n    this.gotoSlip = function(slip, options) {\n\tconsole.log(\"previous is ca goto slip\", options, slip.element, this.getDoNotMove());\n\tconsole.log(\"we goto slip\", slip.element, this.getDoNotMove());\n\toptions = options ? options : {};\n\tconsole.log(\"options is \", options);\n\tif(slip.element.tagName == \"SLIP-SLIP\")\n\t{\n\t     setTimeout(() => {\n\t\tlet coord = slip.findSlipCoordinate();\n\t\tif(typeof slip.currentX != \"undefined\" && typeof slip.currentY != \"undefined\") {\n\t\t    console.log(\"previous is ca ORIGIN 1\", slip.currentX, slip.currentY, this.getDoNotMove(), options);\n\t\t    this.moveWindow(slip.currentX, slip.currentY, coord.scale, slip.rotate, typeof(options.delay)!=\"undefined\" ? options.delay : (typeof(slip.currentDelay)!=\"undefined\" ? slip.currentDelay : slip.delay));\n\t\t} else {\n\t\t    slip.currentX = coord.x; slip.currentY = coord.y; slip.currentDelay = slip.delay;\n\t\t    console.log(\"previous is ca ORIGIN 2\", coord.x, coord.y, this.getDoNotMove());\n\t\t    this.moveWindow(coord.x, coord.y, coord.scale, slip.rotate, typeof(options.delay)!=\"undefined\" ? options.delay : (typeof(slip.currentDelay)!=\"undefined\" ? slip.currentDelay : slip.delay));\n\t\t}\n\t     },0);\n\t}\n\telse {\n\t     setTimeout(() => {\n\t\tconsole.log(\"debug slip element\", slip.element);\n\t\tlet coord = this.getCoordinateInUniverse(slip.element);\n\t\t this.moveWindow(coord.centerX, coord.centerY, Math.max(coord.width, coord.height), 0, typeof(options.delay)!=\"undefined\" ? options.delay : slip.delay);\n\t     },0);\n\t}\n    };\n    let rootSlip = new Slip(root, \"Presentation\", [], this, {});\n    let stack = [rootSlip];\n\n    // Stack Management:\n    this.push = function (n) {\n\tthis.getToC().querySelectorAll(\".toc-slip .active-slip\").forEach(elem => elem.classList.remove(\"active-slip\"));\n\tif(n.tocElem)\n\t    n.tocElem.classList.add(\"active-slip\");\n\tstack.push(n);\n\treturn ;\n    };\n    this.pop = function () {\n\tthis.getToC().querySelectorAll(\".toc-slip .active-slip\").forEach(elem => elem.classList.remove(\"active-slip\"));\n\tlet n = stack.pop();\n\tif(stack.length == 0)\n\t    stack.push(n);\n\tif(stack[stack.length -1].tocElem)\n\t    stack[stack.length -1].tocElem.classList.add(\"active-slip\");\n\treturn n;\n    };\n    this.getCurrentSlip = function () {\n\treturn stack[stack.length -1];\n    };\n    this.getSlipTree = function (slip) {\n\tslip = slip || rootSlip;\n\tif(slip instanceof Slip) \n\t    return {name: slip.name, slip: slip, subslips: slip.getActionList().map((e) => this.getSlipTree(e))};\n\treturn {function: true};\n    };\n\n    this.goToState = function(state) {\n\tlet iter = (state) => {\n\t    if(state.length == 0)\n\t\treturn;\n\t    iter(state[0]);\n\t    while(state[1].getActionIndex()<state[2])\n\t\tthis.next();\n\t};\n\tstack = [rootSlip];\n\trootSlip.refreshAll();\n\titer(state);\n\tthis.gotoSlip(state[1]);\n    };\n    let toc;\n    this.getToC = function() {\n\tif (toc)\n\t    return toc;\n\ttoc = document.querySelector(\".toc-slip\");\n\treturn toc;\n    };\n    this.showToC = function () {\n\tconsole.log(\"debug showtoc\");\n\tlet toc = document.querySelector(\".toc-slip\");\n\t// let innerHTML = \"\";\n\tlet globalElem = document.createElement(\"div\");\n\tlet tree = this.getSlipTree();\n\t// let before = true;\n\tlet displayTree = (tree, stackWithNumbers) => {\n\t    console.log(\"debug treee\", tree);\n\t    let containerElement = document.createElement(\"div\");\n\t    let nameElement = document.createElement(\"div\");\n\t    // if(before)\n\t    // \tnameElement.style.color = \"blue\";\n\t    // else\n\t    // \tnameElement.style.color = \"yellow\";\n\t    // if(tree.slip == this.getCurrentSlip()) {\n\t    // \tnameElement.style.color = \"red\";\n\t    // \tbefore = false;\n\t    // }\n\t\t\n\t    nameElement.innerText = tree.slip.fullName; //? tree.slip.fullName : tree.slip.name ; //+ \" (\" + (tree.slip.getActionIndex()+1) + \"/\" + (tree.slip.getMaxNext()+1) + \")\";\n\t    containerElement.appendChild(nameElement);\n\t    // innerHTML += \"<div>\"+tree.name+\"</div>\";\n\t    if(tree.subslips.length > 0) {\n\t\tlet ulElement = document.createElement(\"ul\");\n\t\t// innerHTML += \"<ul>\";\n\t\ttree.subslips.forEach((subtree, index) => {\n\t\t    let newStackWithNumbers = [stackWithNumbers, tree.slip, index];\n\t\t    let liElement = document.createElement(\"li\");\n\t\t    // innerHTML += \"<li>\";\n\t\t    if(subtree.function) {\n\t\t\tlet toCounter = (c) => {\n\t\t\t    if(c.length == 0)\n\t\t\t\treturn [];\n\t\t\t    return toCounter(c[0]).concat([c[2]]);\n\t\t\t};\n\t\t\tliElement.innerText = this.countersToString(toCounter(newStackWithNumbers));\n\t\t\t//\t\t\tliElement.innerText = \"\"+(index+1);\n\t\t\tliElement.classList.add(\"toc-function\");\n\t\t    } else\n\t\t\tliElement.appendChild(displayTree(subtree, newStackWithNumbers));\n\t\t    liElement.addEventListener(\"click\", (ev) => {\n\t\t    \tif(ev.target == liElement) {\n\t\t    \t    this.goToState(newStackWithNumbers);\n\t\t    \t    console.log(\"newstack\", newStackWithNumbers);\n\t\t    \t}\n\t\t    });\n\t\t    ulElement.appendChild(liElement);\n\t\t    \n\t\t    // innerHTML += \"</li>\";\n\t\t});\n\t\tcontainerElement.appendChild(ulElement);\n\t\ttree.slip.setTocElem(containerElement);\n\t\t// innerHTML += \"</ul>\";\n\t    }\n\t    console.log(\"debug tree, will return\", containerElement);\n\t    // containerElement.addEventListener(\"click\", () => { console.log(stackWithNumbers);});\n\t    return containerElement;\n\t};\n\ttoc.innerHTML = \"\";\n\t// toc.innerHTML = innerHTML;\n\ttoc.appendChild(displayTree(tree, []));\n    };\n    \n    // this.getRootSlip = () => rootSlip;\n    this.setRootSlip = (root) => {\n\trootSlip = root;\n\tstack = [rootSlip];\n    };\n    this.getRootSlip = () => rootSlip;\n    this.start = () => {\n\tstack = [rootSlip];\n\tthis.next();\n\treturn this;\n    };\n    this.restart = () => {\n\tstack = [rootSlip];\n\trootSlip.refreshAll();\n\tthis.next();\n    };\n    let controller = new Controller(this);\n    this.getController = () => controller;\n};\n"],"names":["myQueryAll","root","selector","avoid","id","Math","random","toString","substr","allElem","Array","from","querySelectorAll","separatedSelector","split","map","selec","join","other","filter","value","includes","cloneNoSubslip","elem","newElem","cloneNode","childNodes","forEach","child","tagName","placeholder","document","createElement","classList","add","appendChild","replaceSubslips","clone","subslips","placeholders","subslip","index","replaceWith","window","exportName","undefined","assign","VENDOR_PREFIXES","TEST_ELEMENT","round","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","isArray","each","obj","iterator","i","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","this","arguments","Object","target","TypeError","output","source","nextKey","extend","dest","src","merge","keys","inherit","base","properties","childP","baseP","prototype","create","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","x","deltaX","y","deltaY","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","start","end","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","computeIntervalInputData","srcEvent","computeInputData","emit","recognize","clientX","clientY","p1","p2","props","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","cleanTouchActions","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","DIRECTION_LEFT","DIRECTION_UP","preventSrc","Recognizer","defaults","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","DIRECTION_HORIZONTAL","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","handlers","oldCssProps","toggleCssProps","item","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_VERTICAL","DIRECTION_ALL","Tap","Pan","Swipe","Pinch","Rotate","Press","module","exports","ng","engine","getEngine","setEngine","body","next","previous","speedMove","getCurrentSlip","refresh","slip","zIndex","canvas","openWindowHeight","getOpenWindowHeight","openWindowWidth","getOpenWindowWidth","moveWindowRelative","showToC","querySelector","display","shiftKey","nextSlip","previousSlip","pop","Slip","fullName","actionL","generateActionList","newActionList","queryAll","getAttribute","addSubSlips","setNthAction","actionList","setAction","getActionList","ret","getMaxNext","pauseSlipList","n","action","getCurrentSubSlip","getActionIndex","nextStageNeedGoto","getSubSlipList","actionIndex","setActionIndex","actionI","maxNext","maxTemp","attr","strMax","max","parseInt","sumArray","hasAttribute","reduce","quer","query","findSubslipByID","goodSubslip","findSlipCoordinate","coord","getCoordinateInUniverse","centerX","updatePauseAncestors","pause","parentElement","unpause","moveDownTo","moveUpTo","moveCenterTo","executeScript","reveal","focus","unfocus","incrPause","setAttribute","d","removeAttribute","doAttributes","opacity","visibAt","staticAt","makeUnStatic","makeStatic","incrIndex","updateToC","toReturn","savedActionIndex","savedDelay","currentDelay","setDoNotMove","doRefresh","getDoNotMove","gotoSlip","delay","setTocElem","tocElem","ToCList","firstVisit","refreshAll","subSlipList","clonedElement","currentX","currentY","position","visibility","moveToElement","Function","innerHTML","offsetTop","moveWindow","rotate","offsetHeight","restoreWindow","revealAll","hide","hideAll","MathJax","startup","promise","then","getCloned","setCloned","c","parseFloat","isNaN","generatePauseFlowSlipList","slipList","bla","step","Engine","rootElem","container","slipElem","scaleContainer","slipContainer","fChild","firstChild","width","height","layerX","layerY","prepareRoot","cursor","timeOutIds","browserHeight","browserWidth","winX","winY","currentScale","currentRotate","openWindow","universe","slips","getCoord","doNotMove","counterToString","num","depth","roman","result","decimal","m","transitionDuration","left","top","transform","dscale","drotate","placeSlip","slipScaleContainer","offsetWidth","placeSlips","rootDepth","placeOpenWindow","innerHeight","innerWidth","floor","right","bottom","transformOrigin","countersToString","counterList","res","updateCounter","counters","newCurrentSlip","currentSlip","newCurrentSlide","globalScale","parseScale","getCoordIter","cInParent","offsetLeft","getCoordInParen","offsetParent","centerY","contains","cParent","getComputedStyle","toc","rootSlip","getToC","getSlipTree","function","goToState","iter","tree","displayTree","stackWithNumbers","containerElement","nameElement","innerText","ulElement","subtree","newStackWithNumbers","liElement","toCounter","setRootSlip","getRootSlip","restart","controller","Controller","getController","IController","ISlip","Util","IUtil"],"mappings":"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"}