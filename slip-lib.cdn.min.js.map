{"version":3,"file":"slip-lib.cdn.min.js","sources":["../src/modules/util.mjs","../src/modules/engine.mjs","../src/modules/controller.mjs","../src/modules/slip.mjs","../src/slip-lib.js"],"sourcesContent":["export let myQueryAll = (root, selector, avoid) => {\n    avoid = avoid || \".slip\";\n    if (!root.id)\n\troot.id = '_' + Math.random().toString(36).substr(2, 15);;\n    let allElem = Array.from(root.querySelectorAll(selector));\n    let separatedSelector = selector.split(\",\").map(selec => \"#\"+root.id+\" \" + avoid + \" \" + selec).join();\n    // console.log(\"debug myQueryAll\", selector, \"VS\",  separatedSelector);\n    let other = Array.from(root.querySelectorAll(separatedSelector));\n    // let other = Array.from(root.querySelectorAll(\"#\"+root.id+\" \" + avoid + \" \" + separatedSelector));\n    return allElem.filter(value => !other.includes(value));\n};\nwindow.myQueryAll = myQueryAll;\n\nexport function cloneNoSubslip (elem) {\n    let newElem = elem.cloneNode(false);\n    elem.childNodes.forEach((child) => {\n\tif(child.classList && child.classList.contains(\"slip\")){\n\t    let placeholder = document.createElement(child.tagName);\n\t    placeholder.classList.add(\"toReplace\");\n\t    newElem.appendChild(placeholder);\n\t}\n\telse\n\t    newElem.appendChild(cloneNoSubslip(child));\n    });\n    return newElem;\n}\nexport function replaceSubslips(clone, subslips) {\n    let placeholders = myQueryAll(clone, \".toReplace\");\n    subslips.forEach((subslip, index) => {\n\tplaceholders[index].replaceWith(subslip);\n    });\n}\n","import { myQueryAll } from './util'\n\nexport default function (root) {\n    function prepareRoot (rootElem) {\n\tlet container = document.createElement(\"div\");\n\tcontainer.innerHTML = \n\t    '\t<div id=\"open-window\">\\\n\t    <div class=\"format-container\">\\\n\t    <div class=\"rotate-container\">\\\n\t\t<div class=\"scale-container\">\\\n\t\t    <div class=\"universe movable\" id=\"universe\">\\\n\t\t\t<div width=\"10000\" height=\"10000\" class=\"fog\"></div>\\\n                        <div class=\"placeHolder\"></div>\\\n\t\t    </div>\\\n\t\t</div>\\\n\t\t</div>\\\n\t    </div>\\\n\t</div>\\\n\t<div class=\"cpt-slip\">0</div>\\\n\t<div class=\"toc-slip\" style=\"display:none;\"></div>';\n\trootElem.replaceWith(container);\n\tcontainer.querySelector(\".placeHolder\").replaceWith(rootElem);\n\trootElem.querySelectorAll(\".slip\").forEach((slipElem) => {\n\t    setTimeout(() => {\n\t\tvar scaleContainer = document.createElement('div');\n\t\tvar slipContainer = document.createElement('div');\n\t\tscaleContainer.classList.add(\"slip-scale-container\");\n\t\tslipContainer.classList.add(\"slip-container\");\n\t\tlet fChild;\n\t\twhile((fChild = slipElem.firstChild)) {\n\t\t    slipContainer.appendChild(fChild);\n\t\t}\n\t\tscaleContainer.appendChild(slipContainer);\n\t\tslipElem.appendChild(scaleContainer);\n\t    },0);\n\t});\n\trootElem.style.width = \"unset\";\n\trootElem.style.height = \"unset\";\n\tdocument.querySelectorAll(\".background-canvas\").forEach((elem)=> {elem.addEventListener(\"click\", (ev) => { console.log(\"vous avez cliquez aux coordonnÃ©es : \", ev.layerX, ev.layerY); });});\t\n    }\n    prepareRoot(root);\n\n    // Constants\n    document.body.style.cursor = \"auto\";\n    let timeOutIds = [];\n    document.body.addEventListener(\"mousemove\", (ev) => {\n\ttimeOutIds.forEach((id) => { clearTimeout(id); });\n\tdocument.body.style.cursor = \"auto\";\n\ttimeOutIds.push(setTimeout(() => { document.body.style.cursor = \"none\";}, 5000));\n    });\n    let openWindow = document.querySelector(\"#open-window\");\n    let universe = document.querySelector(\"#universe\");\n    let slips = universe.querySelectorAll(\".slip:not(.root)\");\n    let browserHeight, openWindowWidth;\n    let browserWidth, openWindowHeight;\n    this.getOpenWindowHeight = () => openWindowHeight;\n    this.getOpenWindowWidth = () => openWindowWidth;\n\n    let winX, winY;\n    let currentScale, currentRotate;\n    this.getCoord = () => { return {x: winX, y: winY, scale: currentScale};};\n    this.moveWindow = function (x, y, scale, rotate, delay) {\n\tconsole.log(\"move to\", x, y, \"with scale, rotate, delay\", scale, rotate, delay);\n\tcurrentScale = scale;\n\tcurrentRotate = rotate;\n\twinX = x ;\n\twinY = y;\n\tconsole.log(x,y);\n\tsetTimeout(() => {\n\t    document.querySelector(\".scale-container\").style.transitionDuration = delay+\"s\";\n\t    document.querySelector(\".rotate-container\").style.transitionDuration = delay+\"s\";\n\t    universe.style.transitionDuration = delay+\"s, \"+delay+ \"s\"; \n\t    universe.style.left = -(x*1440 - 1440/2)+\"px\";\n\t    universe.style.top = -(y*1080 - 1080/2)+\"px\";\n\t    document.querySelector(\".scale-container\").style.transform = \"scale(\"+(1/scale)+\")\";\n\t    document.querySelector(\".rotate-container\").style.transform = \"rotate(\"+(rotate)+\"deg)\";\n\t},0);\n    };\n    this.moveWindowRelative = function(dx, dy, dscale, drotate, delay) {\n\tthis.moveWindow(winX+dx, winY+dy, currentScale+dscale, currentRotate+drotate, delay);\n    };\n    this.placeSlip = function(slip) {\n\t// console.log(\"debug Previous (slip)\", slip);\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\t// let x=parseFloat(slip.getAttribute(\"pos-x\")), y=parseFloat(slip.getAttribute(\"pos-y\"));\n\tlet scale = parseFloat(slip.getAttribute(\"scale\"));\n\t// // console.log(slip);\n\tlet slipScaleContainer = slip.querySelector(\".slip-scale-container\");\n\t// let rotate = 0;\n\tscale = isNaN(scale) ? 1 : scale ;\n\t// x = (isNaN(x) ? posX : x);\n\t// y = (isNaN(y) ? posY : y);\n\t// slip.setAttribute(\"pos-x\", x);\n\t// slip.setAttribute(\"pos-y\", y);\n\t// slip.setAttribute(\"scale\", scale);\n\t// slip.setAttribute(\"rotate\", rotate);\n\t// posX = x + 1;\n\t// posY = y;\n\t// slip.style.top = (y*1080 - 1080/2)+\"px\";\n\t// slip.style.left = (x*1440 - 1440/2)+\"px\";\n\t// if(!slip.classList.contains(\"permanent\"))\n\t// \tslip.style.zIndex = \"-1\";\n\t// slip.style.transformOrigin = \"50% 50%\";\n\tslipScaleContainer.style.transform = \"scale(\"+scale+\")\";\n\tslip.style.width = (Math.max(slipScaleContainer.offsetWidth, 1440))*scale+\"px\";\n\tslip.style.height = (Math.max(slipScaleContainer.offsetHeight, 1080))*scale+\"px\";\t\n    };\n    this.placeSlips = function () {\n\t// let posX = 0.5;\n\t// let posY = 0.5;\n\tlet depth = function (elem) {\n\t    console.log(\"debug depth (elem)\", elem);\n\t    let subslips = myQueryAll(elem, \".slip\");\n\t    console.log(\"debug depth (subslips)\", elem);\n\t    return 1+subslips.map(depth).reduce((a,b) => Math.max(a,b),0);\n\t};\n\tlet rootDepth = depth(document.body);\n\tconsole.log(\"debug\", rootDepth);\n\tfor(let i= 0; i<rootDepth; i++)\n\t    slips.forEach(this.placeSlip);\t\n    };\n    setTimeout(() => {\n\tthis.placeSlips();\n    },0);\n    this.placeOpenWindow = function () {\n\tbrowserHeight = window.innerHeight;\n\tbrowserWidth = window.innerWidth;\n\tif(browserHeight/3 < browserWidth/4) {\n\t    openWindowWidth = Math.floor((browserHeight*4)/3);\n\t    openWindowHeight = browserHeight;\n\t    openWindow.style.left = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.right = ((window.innerWidth - openWindowWidth) /2)+\"px\";\n\t    openWindow.style.width = (openWindowWidth)+\"px\";\n\t    openWindow.style.top = \"0\";\n\t    openWindow.style.bottom = \"0\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t}\n\telse {\n\t    openWindowHeight = Math.floor((browserWidth*3)/4);\n\t    openWindowWidth = browserWidth;\n\t    openWindow.style.top = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.bottom = ((window.innerHeight - openWindowHeight) /2)+\"px\";\n\t    openWindow.style.height = (openWindowHeight)+\"px\";\n\t    openWindow.style.right = \"0\";\n\t    openWindow.style.left = \"0\";\n\t    openWindow.style.width = openWindowWidth+\"px\";\n\t}\n\tdocument.querySelector(\".scale-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".rotate-container\").style.transformOrigin = (1440/2)+\"px \"+(1080/2)+\"px\";\n\tdocument.querySelector(\".format-container\").style.transform = \"scale(\"+(openWindowWidth/1440)+\")\";\n\tdocument.querySelector(\".cpt-slip\").style.right =  (parseInt(openWindow.style.left)) + \"px\";\n\tdocument.querySelector(\".cpt-slip\").style.bottom =  \"0\";\n\tdocument.querySelector(\".cpt-slip\").style.zIndex =  \"10\";\n    };\n    this.placeOpenWindow();\n    window.addEventListener(\"resize\", (ev) => {\n\tthis.placeOpenWindow();\n\tthis.moveWindow(winX, winY, currentScale, currentRotate, 0);\n    });\n\n    // Taken from https://selftaughtjs.com/algorithm-sundays-converting-roman-numerals\n    // Use in showing roman numbers for slip number\n    function counterToString(num, depth) {\n\tif(depth == 1 || depth > 3)\n\t    return num.toString();\n\tlet result = '';\n\tlet decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n\tlet roman;\n\tif(depth == 0)\n\t    roman = [\"M\", \"CM\",\"D\",\"CD\",\"C\", \"XC\", \"L\", \"XL\", \"X\",\"IX\",\"V\",\"IV\",\"I\"];\n\telse\n\t    roman = [\"m\", \"cm\",\"d\",\"cd\",\"c\", \"xc\", \"l\", \"xl\", \"x\",\"ix\",\"v\",\"iv\",\"i\"];\n\tfor (var i = 0;i<=decimal.length;i++) {\n\t    while (num%decimal[i] < num) {     \n\t\tresult += roman[i];\n\t\tnum -= decimal[i];\n\t    }\n\t}\n\treturn result;\n    }\n    this.countersToString = (counterList) => {\n\tlet res = '';\n\tres += counterToString(counterList[0]+1, 0);\n\tfor(let i = 1; i < counterList.length; i++)\n\t    res += \".\" + counterToString(counterList[i]+1, i);\n\treturn res;\t\n    };\n    this.updateCounter = function () {\n\tlet counters = stack.map((slip) => slip.getActionIndex());\n\tdocument.querySelector(\".cpt-slip\").innerHTML = this.countersToString(counters);\t\n    };\n    this.next = () => {\n\tif(document.querySelector(\".toc-slip\").innerHTML == \"\")\n\t    this.showToC();\n\t// return true if and only if the stack changed\n\tlet currentSlide = this.getCurrentSlip();\n\tlet n = currentSlide.next();\n\tthis.updateCounter();\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    this.next();\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    this.gotoSlip(newCurrentSlide);\n\t    // newCurrentSlide.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() < newCurrentSlide.getMaxNext())\n\t\tthis.next();\n\t    // this.showToC();\n\t    return true;\n\t    // console.log(stack);\n\t}\n\t// this.showToC();\n\treturn false;\n    };\n    this.nextSlip = function () {\n\t// Do this.next() untill the stack change\n\twhile(!this.next()) {}\n    };\n    this.previous = () => {\n\tlet currentSlip = this.getCurrentSlip();\n\tlet n = currentSlip.previous();\n\tconsole.log(\"debug previous (currentSlip, n)\", currentSlip, n);\n\tif(n instanceof Slip) {\n\t    this.gotoSlip(n);\n\t    this.push(n);\n\t    // this.showToC();\n\t    return true;\n\t}\n\telse if(!n) {\n\t    this.pop();\n\t    let newCurrentSlide = this.getCurrentSlip();\n\t    this.gotoSlip(newCurrentSlide);\n\t    // newCurrentSlide.incrIndex();\n\t    if(stack.length > 1 || newCurrentSlide.getActionIndex() > -1)\n\t\tthis.previous();\n\t    // console.log(stack);\n\t    // this.showToC();\n\t    return true;\n\t}\n\t// this.showToC();\n\treturn false;\n\t// console.log(\"returned\", n);\n    };\n    this.previousSlip = function () {\n\t// Do this.previous() untill the stack change\n\twhile(!this.previous()) {}\n    };\n\n    this.getCoordinateInUniverse = function (elem) {\n\tconsole.log(\"debug getcoord elem\", elem);\n\tlet getCoordInParen = (elem) => {\n\t    return {x: elem.offsetLeft, y:elem.offsetTop};\t    \n\t};\n\tlet globalScale = 1;\n\tlet parseScale = function(transform) {\n\t    if (transform == \"none\")\n\t\treturn 1;\n\t    return parseFloat(transform.split(\"(\")[1].split(\",\")[0]);\n\t};\n\tlet getCoordIter = (elem) => {\n\t    console.log(\"debug getcoorditer elem\", elem);\n\t    let cInParent = getCoordInParen(elem);\n\t    if(!elem.offsetParent)\n\t\treturn { x: 0,\n\t\t\t y: 0,\n\t\t\t centerX: 0,\n\t\t\t centerY: 0,\n\t\t\t width: 0,\n\t\t\t height: 0,\n\t\t\t scale: 0 };\n\t    if(elem.offsetParent.classList.contains(\"universe\"))\n\t    {\n\t\tconsole.log(\"universe\", cInParent);\n\t\treturn cInParent;\n\t    }\n\t    let cParent = getCoordIter(elem.offsetParent);\n\t    let style = window.getComputedStyle(elem.offsetParent);\n\t    // console.log(style);\n\t    let scale;\n\t    // console.log(\"style\", style.transform);\n\t    // if (style.transform == \"none\")\n\t    // \tscale = 1;\n\t    // else\n\t    // \tscale = parseFloat(style.transform.split(\"(\")[1].split(\",\")[0]);\n\t    scale = parseScale(style.transform);\n\t    // console.log(style.transform);\n\t    // console.log(\"scale\", scale);\n\t    // console.log(\"globalScale\", globalScale);\n\t    globalScale *= scale;\n\t    // let scale = 1 ; // Has to parse/compute the scale, for now always 1\n\t    // console.log(\"at step\",  \"cParent.x\", cParent.x, \"cInParen.x\", cInParent.x, \"scale\", scale);\n\t    return {x:cParent.x+cInParent.x*globalScale, y:cParent.y+cInParent.y*globalScale };\n\t};\n\tlet c = getCoordIter(elem);\n\tlet style = window.getComputedStyle(elem);\n\tlet scale = parseScale(style.transform);\n\tglobalScale *= scale;\n\tconsole.log(\"getCoord\", {x:c.x/1440+0.5, y:c.y/1080+0.5}, \"globalScale\", globalScale, style.transform, scale);\n\tlet ret = { x: c.x/1440,\n\t\t    y: c.y/1080,\n\t\t    centerX:c.x/1440+0.5*elem.offsetWidth/1440*globalScale,\n\t\t    centerY:c.y/1080+0.5*elem.offsetHeight/1080*globalScale,\n\t\t    width: elem.offsetWidth/1440*globalScale,\n\t\t    height: elem.offsetHeight/1080*globalScale,\n\t\t    scale: globalScale };\n\tconsole.log(ret);\n\treturn ret;\n\t// return {x:c.x/1440+elem*globalScale*scale, y:c.y/1080+0.5*globalScale*scale, scale: globalScale*scale};\n\t// return {x: this.element.offsetLeft/1440+0.5, y:this.element.offsetTop/1080+0.5};\n    };\n    this.moveToElement = function(element, options) {\n\tlet coord = this.getCoordinateInUniverse(element);\n\tlet actualSize = {width: element.offsetWidth*coord.scale, height: element.offsetHeight*coord.scale};\n\tif(options)\n\t    this.moveWindow(coord.centerX, coord.centerY, Math.max(coord.width, coord.height)// coord.scale\n\t\t\t    , 0, options.delay ? options.delay : 1);\n    };\n    this.gotoSlip = function(slip, options) {\n\tconsole.log(\"we goto slip\");\n\toptions = options ? options : {};\n\tconsole.log(\"options is \", options);\n\tif(slip.element.classList.contains(\"slip\"))\n\t    setTimeout(() => {\n\t\tlet coord = slip.findSlipCoordinate();\n\t\tif(typeof slip.currentX != \"undefined\" && typeof slip.currentY != \"undefined\") {\n\t\t    this.moveWindow(slip.currentX, slip.currentY, coord.scale, slip.rotate, options.delay ? options.delay : slip.delay);\n\t\t} else {\n\t\t    slip.currentX = coord.x; slip.currentY = coord.y;\n\t\t    this.moveWindow(coord.x, coord.y, coord.scale, slip.rotate, options.delay ? options.delay : slip.delay);\n\t\t}\n\t    },0);\n\telse\n\t    setTimeout(() => {\n\t\tconsole.log(\"debug slip element\", slip.element);\n\t\tlet coord = this.getCoordinateInUniverse(slip.element);\n\t\tthis.moveWindow(coord.centerX, coord.centerY, Math.max(coord.width, coord.height), 0, options.delay ? options.delay : slip.delay);\n\t    },0);\n    };\n    let rootSlip = new Slip(root.id, \"Presentation\", [], this, {});\n    let stack = [rootSlip];\n\n    // Stack Management:\n    this.push = function (n) {\n\tstack.push(n);\n\treturn ;\n    };\n    this.pop = function () {\n\tlet n = stack.pop();\n\tif(stack.length == 0)\n\t    stack.push(n);\n\treturn n;\n    };\n    this.getCurrentSlip = function () {\n\treturn stack[stack.length -1];\n    };\n    this.getSlipTree = function (slip) {\n\tslip = slip || rootSlip;\n\tif(slip instanceof Slip) \n\t    return {name: slip.name, slip: slip, subslips: slip.getActionList().map((e) => this.getSlipTree(e))};\n\treturn {function: true};\n    };\n\n    this.goToState = function(state) {\n\tlet iter = (state) => {\n\t    if(state.length == 0)\n\t\treturn;\n\t    iter(state[0]);\n\t    while(state[1].getActionIndex()<state[2])\n\t\tthis.next();\n\t};\n\tstack = [rootSlip];\n\trootSlip.refreshAll();\n\titer(state);\n\tthis.gotoSlip(state[1]);\n    };\n\n    this.showToC = function () {\n\tconsole.log(\"debug showtoc\");\n\tlet toc = document.querySelector(\".toc-slip\");\n\t// let innerHTML = \"\";\n\tlet globalElem = document.createElement(\"div\");\n\tlet tree = this.getSlipTree();\n\t// let before = true;\n\tlet displayTree = (tree, stackWithNumbers) => {\n\t    console.log(\"debug treee\", tree);\n\t    let containerElement = document.createElement(\"div\");\n\t    let nameElement = document.createElement(\"div\");\n\t    // if(before)\n\t    // \tnameElement.style.color = \"blue\";\n\t    // else\n\t    // \tnameElement.style.color = \"yellow\";\n\t    // if(tree.slip == this.getCurrentSlip()) {\n\t    // \tnameElement.style.color = \"red\";\n\t    // \tbefore = false;\n\t    // }\n\t\t\n\t    nameElement.innerText = tree.slip.fullName ? tree.slip.fullName : tree.slip.name ; //+ \" (\" + (tree.slip.getActionIndex()+1) + \"/\" + (tree.slip.getMaxNext()+1) + \")\";\n\t    containerElement.appendChild(nameElement);\n\t    // innerHTML += \"<div>\"+tree.name+\"</div>\";\n\t    if(tree.subslips.length > 0) {\n\t\tlet ulElement = document.createElement(\"ul\");\n\t\t// innerHTML += \"<ul>\";\n\t\ttree.subslips.forEach((subtree, index) => {\n\t\t    let newStackWithNumbers = [stackWithNumbers, tree.slip, index];\n\t\t    let liElement = document.createElement(\"li\");\n\t\t    // innerHTML += \"<li>\";\n\t\t    if(subtree.function) {\n\t\t\tlet toCounter = (c) => {\n\t\t\t    if(c.length == 0)\n\t\t\t\treturn [];\n\t\t\t    return toCounter(c[0]).concat([c[2]]);\n\t\t\t};\n\t\t\tliElement.innerText = this.countersToString(toCounter(newStackWithNumbers));\n\t\t\t//\t\t\tliElement.innerText = \"\"+(index+1);\n\t\t\tliElement.classList.add(\"toc-function\");\n\t\t    } else\n\t\t\tliElement.appendChild(displayTree(subtree, newStackWithNumbers));\n\t\t    liElement.addEventListener(\"click\", (ev) => {\n\t\t    \tif(ev.target == liElement) {\n\t\t    \t    this.goToState(newStackWithNumbers);\n\t\t    \t    console.log(\"newstack\", newStackWithNumbers);\n\t\t    \t}\n\t\t    });\n\t\t    ulElement.appendChild(liElement);\n\t\t    \n\t\t    // innerHTML += \"</li>\";\n\t\t});\n\t\tcontainerElement.appendChild(ulElement);\n\t\ttree.slip.setTocElem(containerElement);\n\t\t// innerHTML += \"</ul>\";\n\t    }\n\t    console.log(\"debug tree, will return\", containerElement);\n\t    // containerElement.addEventListener(\"click\", () => { console.log(stackWithNumbers);});\n\t    return containerElement;\n\t};\n\ttoc.innerHTML = \"\";\n\t// toc.innerHTML = innerHTML;\n\ttoc.appendChild(displayTree(tree, []));\n    };\n    \n    // this.getRootSlip = () => rootSlip;\n    this.setRootSlip = (root) => {\n\trootSlip = root;\n\tstack = [rootSlip];\n    };\n    this.getRootSlip = () => rootSlip;\n    this.start = () => {\n\tstack = [rootSlip];\n\tthis.next();\n    };\n    this.restart = () => {\n\tstack = [rootSlip];\n\trootSlip.refreshAll();\n\tthis.next();\n    };\n};\n","export default function (ng) {\n    let engine = ng;\n    this.getEngine = () => this.engine;\n    this.setEngine = (ng) => this.engine = ng;\n\n    // let mainSlip = mainS;\n    // this.getMainSlip = () => mainSlip;\n    // this.setMainSlip = (slip) => mainSlip = slip;\n\n    let speedMove=1;\n    document.addEventListener(\"keypress\", (ev) => {\n\tif(ev.key == \"f\") { speedMove = (speedMove + 4)%30+1; }    \n\tif(ev.key == \"r\") { engine.getCurrentSlip().refresh(); }    \n\tif(ev.key == \"#\") {\n\t    document.querySelectorAll(\".slip\").forEach((slip) => {slip.style.zIndex = \"-1\";});\n\t    document.querySelectorAll(\".background-canvas\").forEach((canvas) => {canvas.style.zIndex = \"1\";});\n\t}    \n    });\n    document.addEventListener(\"keydown\", (ev) => {\n\tlet openWindowHeight = engine.getOpenWindowHeight();\n\tlet openWindowWidth = engine.getOpenWindowWidth();\n\tif(ev.key == \"l\") { engine.moveWindowRelative( 0                          ,  (speedMove)/openWindowHeight, 0, 0, 0.1); }   // Bas\n\tif(ev.key == \"o\") { engine.moveWindowRelative( 0                          , -(speedMove)/openWindowHeight, 0, 0, 0.1); }  // Haut\n\tif(ev.key == \"k\") { engine.moveWindowRelative(-(speedMove)/openWindowWidth,  0                           , 0, 0, 0.1); }   // Gauche\n\tif(ev.key == \"m\") { engine.moveWindowRelative( (speedMove)/openWindowWidth,  0                           , 0, 0, 0.1); }   // Droite\n\tif(ev.key == \"i\") { engine.moveWindowRelative(0, 0,  0   ,  1, 0.1); }                             // Rotate \n\tif(ev.key == \"p\") { engine.moveWindowRelative(0, 0,  0   , -1, 0.1); }                             // Unrotate\n\tif(ev.key == \"z\") { engine.moveWindowRelative(0, 0,  0.01,  0, 0.1); }                          // Zoom\n\tif(ev.key == \"Z\") { engine.moveWindowRelative(0, 0, -0.01,  0, 0.1); }                          // Unzoom\n\tif(ev.key == \"T\") {\n\t    engine.showToC();\n\t    // document.querySelector(\".toc-slip\").style.display = document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\"; \n\t}   \n\tif(ev.key == \"t\") {\n\t    // engine.showToC();\n\t    document.querySelector(\".toc-slip\").style.display = document.querySelector(\".toc-slip\").style.display == \"none\" ? \"block\" : \"none\"; \n\t}   \n\tif(ev.key == \"ArrowRight\") {\n\t    console.log(ev);\n\t    if(ev.shiftKey)\n\t\tengine.nextSlip();\n\t    else    \n\t\tengine.next();\n\t}\n\telse if (ev.key == \"ArrowLeft\") {\n\t    if(ev.shiftKey)\n\t\tengine.previousSlip();\n\t    else    \n\t\tengine.previous();\n\t}\n\telse if (ev.key == \"ArrowUp\") {\n\t    engine.pop();\n\t}\n    });  \n    \n};\n","import { cloneNoSubslip, myQueryAll, replaceSubslips } from './util'\n\nexport default function Slip(name, fullName, actionL, ng, options) {\n\n    // ******************************\n    // Action List\n    // ******************************\n\n    this.generateActionList = function() {\n\tconsole.log(\"debug generateactionlist\", this.name);\n\tlet newActionList = [];\n\tthis.queryAll(\".slip[enter-at]\").forEach((slip) => {\n\t    console.log(\"new slip with \", slip, null, null, ng, {});\n\t    newActionList[slip.getAttribute(\"enter-at\")] = new Slip(slip, \"\", [], ng, {});\n\t});\n\treturn newActionList;\n    };\n    this.addSubSlips = function() {\n\tconsole.log(\"debug generateactionlist\", this.name);\n\tlet newActionList = [];\n\tthis.queryAll(\".slip[enter-at]\").forEach((slip) => {\n\t    console.log(\"new slip with \", slip, null, null, ng, {});\n\t    this.setNthAction(slip.getAttribute(\"enter-at\"), new Slip(slip, \"\", [], ng, {}));\n\t});\n\treturn newActionList;\n    };\n    let actionList = actionL;// || this.generateActionList();\n    this.setAction = (actionL) => {actionList = actionL;};\n    this.getActionList = () => {\n\tlet ret = [];\n\tfor(let i = 0;i <= this.getMaxNext(); i++) {\n\t    if(this.pauseSlipList[i] instanceof Slip)\n\t\tret[i] = this.pauseSlipList[i];\n\t    else if(typeof actionList[i] == \"function\" || actionList[i] instanceof Slip)\n\t\tret[i] = actionList[i];\n\t    else\n\t\tret[i] = () => {};\n\t}\n\treturn ret;\n    };\n    this.setNthAction = (n,action) => {actionList[n] = action;};\n    this.getSubSlipList = function () {\n\treturn actionList.filter((action) => action instanceof Slip);\n    };\n\n    // ******************************\n    // Action Index\n    // ******************************\n    let actionIndex = -1;\n    this.setActionIndex = (actionI) => actionIndex = actionI;\n    this.getActionIndex = () => actionIndex;\n    this.getMaxNext = () => {\n\tif(this.maxNext)\n\t    return this.maxNext;\n\tlet maxTemp = actionList.length;\n\t[\"mk-visible-at\",\n\t \"mk-hidden-at\",\n\t \"mk-emphasize-at\",\n\t \"mk-unemphasize-at\",\n\t \"emphasize-at\",\n\t \"chg-visib-at\",\n\t \"up-at\",\n\t \"down-at\",\n\t \"center-at\",\n\t \"static-at\",\n\t \"exec-at\",\n\t].forEach((attr) => {\n\t     this.queryAll(\"*[\"+attr+\"]\").forEach((elem) => {\n\t\t elem.getAttribute(attr).split(\" \").forEach((strMax) => {\n\t\t     maxTemp = Math.max(Math.abs(parseInt(strMax)),maxTemp);\n\t\t });\n\t     });\n\t});\n\tlet sumArray = this.queryAll(\"[pause], [step], [auto-enter], [immediate-enter]\").map((elem) => {\n\t    if(elem.hasAttribute(\"pause\") && elem.getAttribute(\"pause\") != \"\")\n\t\treturn parseInt(elem.getAttribute(\"pause\"));\n\t    if(elem.hasAttribute(\"step\") && elem.getAttribute(\"step\") != \"\")\n\t\treturn parseInt(elem.getAttribute(\"step\"));\n\t    return 1; });\n\tmaxTemp = Math.max(maxTemp, sumArray.reduce((a,b) => a+b, 0));\n\tthis.maxNext = maxTemp;\n\treturn maxTemp;\t\n    };\n    \n    // ******************************\n    // Queries\n    // ******************************\n    this.queryAll = (quer) => {\n\treturn myQueryAll(this.element, quer);\n\t// let allElem = Array.from(this.element.querySelectorAll(quer));\n\t// let other = Array.from(this.element.querySelectorAll(\"#\"+this.name+\" .slip \"+quer));\n\t// return allElem.filter(value => !other.includes(value));\n    };\n    this.query = (quer) => {\n\treturn this.queryAll(quer)[0];\n    };\n    this.findSubslipByID = (id) => {\n\tlet goodSubslip = this.getSubSlipList().find((subslip) => {\n\t    if(subslip.name == id)\n\t\treturn 1;\n\t    return subslip.findSubslipByID(id);\n\t});\n\tif(!goodSubslip)\n\t    return false;\n\tif (goodSubslip.name == id) \n\t    return goodSubslip;\n\treturn goodSubslip.findSubslipByID(id);\n    };\n    \n    // ******************************\n    // Coordinates\n    // ******************************\n    this.findSlipCoordinate = () => { // rename to getCoordInUniverse\n\tlet coord = engine.getCoordinateInUniverse(this.element);\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\tcoord.scale *= this.scale;\n\tcoord.y = coord.y + 0.5*coord.scale;\n\tcoord.x = coord.centerX;\n\tconsole.log(\"debug findslipcoordinate\", coord);\n\treturn coord;\n    };\n\n\n    // ******************************\n    // Pause functions\n    // ******************************\n    this.updatePauseAncestors = () => {\n\tthis.queryAll(\".pauseAncestor\").forEach((elem) => {elem.classList.remove(\"pauseAncestor\");});\n\tlet pause = this.query(\"[pause]\");\n\twhile(pause && !pause.classList.contains(\"slip\")) {\n\t    pause.classList.add(\"pauseAncestor\");\n\t    pause = pause.parentElement;\n\t};\n    };\n    this.incrPause = () => {\n\tlet pause = this.query(\"[pause], [auto-enter]:not([auto-enter=\\\"0\\\"]), [immediate-enter]:not([immediate-enter=\\\"0\\\"]), [step]\");\n\t// let pause = this.query(\"[pause]\");\n\tif(pause) {\n\t    console.log(\"pause is\", this.name, pause);\n\t    if(pause.hasAttribute(\"step\")) {\n\t\tif(!pause.getAttribute(\"step\")) \n\t\t    pause.setAttribute(\"step\", 1);\n\t\tlet d = pause.getAttribute(\"step\");\n\t\tif (d <= 1){\n\t\t    pause.removeAttribute(\"step\");\n\t\t} else\n\t\t    pause.setAttribute(\"step\", d-1);\n\t    }\n\t    if(pause.hasAttribute(\"auto-enter\")) {\n\t\tpause.setAttribute(\"auto-enter\", 0);\n\t    }\n\t    if(pause.hasAttribute(\"immediate-enter\")) {\n\t\tpause.setAttribute(\"immediate-enter\", 0);\n\t    }\n\t    if(pause.hasAttribute(\"pause\")) {\n\t\tif(!pause.getAttribute(\"pause\")) \n\t\t    pause.setAttribute(\"pause\", 1);\n\t\tlet d = pause.getAttribute(\"pause\");\n\t\tif (d <= 1){\n\t\t    pause.removeAttribute(\"pause\");\n\t\t    if(pause.hasAttribute(\"down-at-unpause\")) {\n\t\t\tif(pause.getAttribute(\"down-at-unpause\") == \"\")\n\t\t\t    this.moveDownTo(pause, 1);\n\t\t\telse\n\t\t\t    this.moveDownTo(\"#\"+pause.getAttribute(\"down-at-unpause\"), 1);\t\t\t\n\t\t    }\n\t\t    if(pause.hasAttribute(\"up-at-unpause\")) {\n\t\t\tif(pause.getAttribute(\"up-at-unpause\") == \"\")\n\t\t\t    this.moveUpTo(pause, 1);\n\t\t\telse\n\t\t\t    this.moveUpTo(\"#\"+pause.getAttribute(\"up-at-unpause\"), 1);\n\t\t    }\n\t\t    if(pause.hasAttribute(\"center-at-unpause\"))\n\t\t\tif(pause.getAttribute(\"center-at-unpause\") == \"\")\n\t\t\t    this.moveCenterTo(pause, 1);\n\t\t\telse\n\t\t\t    this.moveCenterTo(\"#\"+pause.getAttribute(\"center-at-unpause\"), 1);\n\t\t} else\n\t\t    pause.setAttribute(\"pause\", d-1);\n\t\tthis.updatePauseAncestors();\n\t    }\n\t}\n    };\n\n    // ******************************\n    // Next functions\n    // ******************************\n    this.doAttributes = () => {\n\tthis.queryAll(\"*[mk-hidden-at]\").forEach((elem) => {\n\t    let hiddenAt = elem.getAttribute(\"mk-hidden-at\").split(\" \").map((str) => parseInt(str));\n\t    if(hiddenAt.includes(actionIndex))\n\t\telem.style.opacity = \"0\";});\t\n\tthis.queryAll(\"*[mk-visible-at]\").forEach((elem) => {\n\t    let visibleAt = elem.getAttribute(\"mk-visible-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibleAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";});\t\n\tthis.queryAll(\"*[mk-emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"mk-emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");});\t\n\tthis.queryAll(\"*[mk-unemphasize-at]\").forEach((elem) => {\n\t    let unemphAt = elem.getAttribute(\"mk-unemphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(unemphAt.includes(actionIndex))\n\t\telem.classList.remove(\"emphasize\");});\t\n\tthis.queryAll(\"*[emphasize-at]\").forEach((elem) => {\n\t    let emphAt = elem.getAttribute(\"emphasize-at\").split(\" \").map((str) => parseInt(str));\n\t    if(emphAt.includes(actionIndex))\n\t\telem.classList.add(\"emphasize\");\n\t    else\n\t\telem.classList.remove(\"emphasize\");\n\t});\t\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    let visibAt = elem.getAttribute(\"chg-visib-at\").split(\" \").map((str) => parseInt(str));\n\t    if(visibAt.includes(actionIndex))\n\t\telem.style.opacity = \"1\";\n\t    if(visibAt.includes(-actionIndex))\n\t\telem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    let staticAt = elem.getAttribute(\"static-at\").split(\" \").map((str) => parseInt(str));\n\t    if(staticAt.includes(-actionIndex)){\n\t\telem.style.position = \"absolute\";\n\t\telem.style.visibility = \"hidden\";\n\t    }\n\t    if(staticAt.includes(actionIndex)) {\n\t\telem.style.position = \"static\";\n\t\telem.style.visibility = \"visible\";\n\t    }\n\t});\t    \n\tthis.queryAll(\"*[down-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"down-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveDownTo(elem, 1);\n\t});\n\tthis.queryAll(\"*[up-at]\").forEach((elem) => {\n\t    let goTo = elem.getAttribute(\"up-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goTo.includes(actionIndex))\n\t\tthis.moveUpTo(elem, 1);});\n\tthis.queryAll(\"*[center-at]\").forEach((elem) => {\n\t    let goDownTo = elem.getAttribute(\"center-at\").split(\" \").map((str) => parseInt(str));\n\t    if(goDownTo.includes(actionIndex))\n\t\tthis.moveCenterTo(elem, 1);});\t\n\tthis.queryAll(\"*[exec-at]\").forEach((elem) => {\n\t    let toExec = elem.getAttribute(\"exec-at\").split(\" \").map((str) => parseInt(str));\n\t    if(toExec.includes(actionIndex))\n\t\t(new Function(\"slip\",elem.innerHTML))(this);});\t\n    };\n    this.incrIndex = () => {\n\tconsole.log(\"incrIndex\", this.name);\n\tactionIndex = actionIndex+1;\n\tthis.doAttributes();\n\tif(actionIndex>0)\n\t    this.incrPause();\n\tthis.updateToC();\n    };\n    this.next = function () {\n\tif(actionIndex >= this.getMaxNext())\n\t    return false;\n\tthis.incrIndex();\n\tif(typeof actionList[actionIndex] == \"function\") {\n\t    actionList[actionIndex](this);\n\t}\n\tif(actionList[actionIndex] instanceof Slip){\n\t    return actionList[actionIndex];\n\t}\n\tif(this.pauseSlipList[actionIndex] instanceof Slip)\n\t    return this.pauseSlipList[actionIndex];\n\t// let nextSlip = this.query(\"[pause], [auto-enter]\");\n\t// if(nextSlip.hasAttribute(\"auto-enter\"))\n\t//     return \n\treturn true;\n    };\n    this.previous = () => {\n\tlet savedActionIndex = this.getActionIndex();\n\tthis.doRefresh();\n\tif(savedActionIndex == -1)\n\t    return false;\n \tlet toReturn;\n\twhile(this.getActionIndex()<savedActionIndex-1)\n\t    toReturn = this.next();\n\treturn toReturn;\n    };\n\n    // ******************************\n    // ToC functions\n    // ******************************\n    this.setTocElem = (tocElem) => {this.tocElem = tocElem;};\n    this.updateToC = () => {\n\tif(!this.tocElem)\n\t    return;\n\tif(!this.ToCList)\n\t    this.ToCList = myQueryAll(this.tocElem, \"li\", \"li\");\n\tlet i;\n\tfor(i=0;i<this.getActionIndex(); i++) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"before\");\t    \n\t}\n\tif(i<=this.getActionIndex()) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"current\");\n\t    i++;\n\t}\n\tfor(i;i<=this.getMaxNext(); i++) {\n\t    this.ToCList[i].classList.remove(\"before\", \"after\", \"current\");\n\t    this.ToCList[i].classList.add(\"after\");\n\t}\t\n    };\n    this.firstVisit = () => {\n\tthis.updateToC();\n\tif(options.firstVisit)\n\t    options.firstVisit(this);\n    };\n    this.init = () => {\n\tthis.queryAll(\"*[chg-visib-at]\").forEach((elem) => {\n\t    elem.style.opacity = \"0\";\n\t});\t\n\tthis.queryAll(\"*[static-at]\").forEach((elem) => {\n\t    elem.style.position = \"absolute\";\n\t    elem.style.visibility = \"hidden\";\n\t});\t\n\tthis.doAttributes();\n\tthis.updatePauseAncestors();\n\tif(options.init)\n\t    options.init(this);\n    };\n\n    // ******************************\n    // Refreshes\n    // ******************************\n    this.refresh = () => {\n\tif(actionList[actionIndex] instanceof Slip)\n\t    actionList[actionIndex].refresh();\n\telse\n\t    this.doRefresh();\n    };\n    this.refreshAll = () => {\n\tactionList.filter((elem) => elem instanceof Slip).forEach((subslip) => { subslip.refreshAll();});\n\tthis.doRefresh();\n    };\n    this.doRefresh = () => {\n\tthis.setActionIndex(-1);\n\tlet subSlipList = myQueryAll(this.element, \".slip\");\n\tconsole.log(\"mmdebug\", clonedElement);\n\tlet clone = clonedElement.cloneNode(true);\n\treplaceSubslips(clone, subSlipList);\n\tthis.element.replaceWith(clone);\n\tthis.element = clone;\n\tthis.init();\n\tthis.firstVisit();\n\tdelete(this.currentX);\n\tdelete(this.currentY);\n\tengine.gotoSlip(this);\n    };\n\n    // ******************************\n    // Movement and hide/show\n    // ******************************\n    this.moveUpTo = (selector, delay,  offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop)/1080-offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveDownTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0.0125;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight)/1080 - 1 + offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.moveCenterTo = (selector, delay, offset) => {\n\tsetTimeout(() => {\n\t    let elem;\n\t    if(typeof selector == \"string\") elem = this.query(selector);\n\t    else elem = selector;\n\t    if (typeof offset == \"undefined\") offset = 0;\n\t    let coord = this.findSlipCoordinate();\n\t    let d = ((elem.offsetTop+elem.offsetHeight/2)/1080-1/2+offset)*coord.scale;\n\t    this.currentX = coord.x;\n\t    this.currentY = coord.y+d;\n\t    engine.moveWindow(coord.x, coord.y+d, coord.scale, this.rotate, delay);\n\t},0);\n    };\n    this.reveal = (selector) => {\n\tthis.query(selector).style.opacity = \"1\";\n    };\n    this.revealAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"1\";});\n    };\n    this.hide = (selector) => {\n\tthis.query(selector).style.opacity = \"0\";\n    };\n    this.hideAll = (selector) => {\n\tthis.queryAll(selector).forEach((elem) => { elem.style.opacity = \"0\";});\n    };\n\n    // ******************************\n    // Initialisation of the object\n    // ******************************\n    // names    \n    this.fullName = fullName;\n    this.name =\n\ttypeof name == \"string\" ?\n\tname:\n\tname.id;\n    console.log(\"this name is \", this.name);\n    // engine\n    let engine = ng;\n    this.getEngine = () => engine;\n    this.setEngine = (ng) => engine = ng;\n    // element\n    this.element =\n\ttypeof name == \"string\" ?\n\tdocument.querySelector(\"#\"+name):\n\tname;\n    // clonedElement\n    let clonedElement;\n    if(typeof MathJax != \"undefined\")\n\tMathJax.startup.promise.then(() => {\n\t    setTimeout(() => {clonedElement = cloneNoSubslip(this.element);},0);\n\t});\n    else\n\tsetTimeout(() => {clonedElement = cloneNoSubslip(this.element);},0);\n    this.getCloned = () => clonedElement;\n    this.setCloned = (c) => clonedElement = c;\n    // scale, rotate, delay\n    this.scale = parseFloat(this.element.getAttribute(\"scale\"));\n    if(typeof this.scale == \"undefined\" || isNaN(this.scale)) this.scale = 1;\n    this.rotate = parseFloat(this.element.getAttribute(\"rotate\")) || 0;\n    this.delay = isNaN(parseFloat(this.element.getAttribute(\"delay\"))) ? 0 : (parseFloat(this.element.getAttribute(\"delay\")));\n    // coord\n    let coord = this.findSlipCoordinate();\n    console.log(coord);\n    this.x = coord.x;\n    this.y = coord.y;\n    // Preparing the slip\n    this.init(this, engine);\n    // Adding \"enter-at\" subslips\n    this.addSubSlips();\n    // Adding \"paused-flow\" subslips\n    this.generatePauseFlowSlipList = function () {\n\tlet slipList = [];\n\tlet bla = this.queryAll(\"[pause], [step], [auto-enter], [immediate-enter]\");\n\tlet step = 1;\n\tbla.forEach((elem) => {\n\t    console.log(\"debug generatePauseFlowsliplist\", elem, step);\n\t    if(elem.hasAttribute(\"auto-enter\")){\n\t\tslipList[step] = new Slip(elem, elem.getAttribute(\"toc-title\") || \"\", [], ng, {});\n\t\tstep++;\n\t    }\n\t    if(elem.hasAttribute(\"immediate-enter\")){\n\t\t// the slip is entered before the pause\n\t\tslipList[step-1] = new Slip(elem, elem.getAttribute(\"toc-title\") || \"\", [], ng, {});\n\t\tstep++;\n\t    }\n\t    if(elem.hasAttribute(\"step\")){\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t\tstep += parseInt(elem.getAttribute(\"step\")) || 1 ;\n\t\tconsole.log(\"debug generatePauseFlowsliplist2\", elem, step);\n\t    }\n\t    if(elem.hasAttribute(\"pause\")){\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t\tstep += parseInt(elem.getAttribute(\"pause\")) || 1 ;\n\t\tconsole.log(\"debug generatePauseFlowsliplist1\", elem, step);\n\t    }\n\t});\n\treturn slipList;\n    };\n    this.pauseSlipList = this.generatePauseFlowSlipList();\n    // this.pauseSlipList = this.queryAll(\"[pause], [step], [auto-enter]\").map((elem) => {\n    // \tif(elem.hasAttribute(\"auto-enter\"))\n    // \t    return new Slip(elem, elem.getAttribute(\"toc-title\") || \"\", [], ng, {});\n    // \treturn null;\n    // });\n}\n","import IEngine from './modules/engine'\nimport IController from './modules/controller.mjs'\nimport ISlip from './modules/slip'\nimport * as IUtil from './modules/util'\n\n// import \"./css/slip.css\";\n// import \"./css/theorem.css\";\n\n/**\n * Allows slip-js to be used as a module\n */\nexport const Engine = IEngine;\nexport const Controller = IController;\nexport const Slip = ISlip;\nexport const Util = IUtil;\n\n/**\n * Allows slip-js to be used as simple CDN-included file\n */\nwindow.Engine = IEngine;\nwindow.Controller = IController;\nwindow.Slip = ISlip;\nwindow.Util = IUtil;\n"],"names":["myQueryAll","root","selector","avoid","id","Math","random","toString","substr","allElem","Array","from","querySelectorAll","separatedSelector","split","map","selec","join","other","filter","value","includes","cloneNoSubslip","elem","newElem","cloneNode","childNodes","forEach","child","classList","contains","placeholder","document","createElement","tagName","add","appendChild","replaceSubslips","clone","subslips","placeholders","subslip","index","replaceWith","window","rootElem","container","innerHTML","querySelector","slipElem","setTimeout","scaleContainer","slipContainer","fChild","firstChild","style","width","height","addEventListener","ev","console","log","layerX","layerY","prepareRoot","body","cursor","timeOutIds","clearTimeout","push","browserHeight","openWindowWidth","browserWidth","openWindowHeight","winX","winY","currentScale","currentRotate","openWindow","universe","slips","counterToString","num","depth","roman","result","decimal","i","length","getOpenWindowHeight","getOpenWindowWidth","getCoord","x","y","scale","moveWindow","rotate","delay","transitionDuration","left","top","transform","moveWindowRelative","dx","dy","dscale","drotate","placeSlip","slip","parseFloat","getAttribute","slipScaleContainer","isNaN","max","offsetWidth","offsetHeight","placeSlips","rootDepth","reduce","a","b","this","placeOpenWindow","innerHeight","innerWidth","floor","right","bottom","transformOrigin","parseInt","zIndex","countersToString","counterList","res","updateCounter","counters","stack","getActionIndex","next","showToC","n","getCurrentSlip","Slip","gotoSlip","pop","newCurrentSlide","getMaxNext","nextSlip","previous","currentSlip","previousSlip","getCoordinateInUniverse","globalScale","parseScale","getCoordIter","cInParent","offsetLeft","offsetTop","getCoordInParen","offsetParent","centerX","centerY","cParent","getComputedStyle","c","ret","moveToElement","element","options","coord","findSlipCoordinate","currentX","currentY","rootSlip","getSlipTree","name","getActionList","e","function","goToState","state","iter","refreshAll","toc","tree","displayTree","stackWithNumbers","containerElement","nameElement","innerText","fullName","ulElement","subtree","newStackWithNumbers","liElement","toCounter","concat","target","setTocElem","setRootSlip","getRootSlip","start","restart","ng","engine","getEngine","setEngine","speedMove","key","refresh","canvas","display","shiftKey","actionL","generateActionList","newActionList","queryAll","addSubSlips","setNthAction","actionList","setAction","pauseSlipList","action","getSubSlipList","actionIndex","setActionIndex","actionI","maxNext","maxTemp","attr","strMax","abs","sumArray","hasAttribute","quer","query","findSubslipByID","goodSubslip","find","updatePauseAncestors","remove","pause","parentElement","incrPause","setAttribute","d","removeAttribute","moveDownTo","moveUpTo","moveCenterTo","doAttributes","str","opacity","visibAt","staticAt","position","visibility","Function","incrIndex","updateToC","toReturn","savedActionIndex","doRefresh","tocElem","ToCList","firstVisit","init","subSlipList","clonedElement","offset","reveal","revealAll","hide","hideAll","MathJax","startup","promise","then","getCloned","setCloned","generatePauseFlowSlipList","slipList","bla","step","Engine","IEngine","Controller","IController","ISlip","Util","IUtil"],"mappings":"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"}